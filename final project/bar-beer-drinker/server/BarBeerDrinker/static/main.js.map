{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bar-details/bar-details.component.css","webpack:///./src/app/bar-details/bar-details.component.html","webpack:///./src/app/bar-details/bar-details.component.ts","webpack:///./src/app/bars.service.ts","webpack:///./src/app/beer-details/beer-details.component.css","webpack:///./src/app/beer-details/beer-details.component.html","webpack:///./src/app/beer-details/beer-details.component.ts","webpack:///./src/app/beers.service.ts","webpack:///./src/app/beers/beers.component.css","webpack:///./src/app/beers/beers.component.html","webpack:///./src/app/beers/beers.component.ts","webpack:///./src/app/drinker-details/drinker-details.component.css","webpack:///./src/app/drinker-details/drinker-details.component.html","webpack:///./src/app/drinker-details/drinker-details.component.ts","webpack:///./src/app/drinkers.service.ts","webpack:///./src/app/drinkers/drinkers.component.css","webpack:///./src/app/drinkers/drinkers.component.html","webpack:///./src/app/drinkers/drinkers.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/modifications.service.ts","webpack:///./src/app/modifications/modifications.component.css","webpack:///./src/app/modifications/modifications.component.html","webpack:///./src/app/modifications/modifications.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { BarDetailsComponent } from './bar-details/bar-details.component';\nimport {BeerDetailsComponent} from './beer-details/beer-details.component';\nimport {BeersComponent} from './beers/beers.component'; \nimport { DrinkerComponent } from './drinkers/drinkers.component';\nimport { DrinkerDetailsComponent } from './drinker-details/drinker-details.component';\nimport {HomeComponent} from './home/home.component';\nimport { ModificationsComponent } from './modifications/modifications.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: HomeComponent\n  },\n  {\n    path: 'static',\n    pathMatch: 'full',\n    component: HomeComponent\n\n  },\n  {\n      path: 'bars',\n      pathMatch: 'full',\n      component: WelcomeComponent\n  },\n  {\n    path: 'bars/:bar',\n    pathMatch: 'full',\n    component: BarDetailsComponent\n  },\n  {\n    path :'beers' , \n    pathMatch: 'full' ,\n    component: BeersComponent\n  },\n  {\n    path: 'beers/:beer' ,\n    pathMatch: 'full',\n    component: BeerDetailsComponent\n  },\n  {\n    path: 'drinkers',\n    pathMatch: 'full',\n    component: DrinkerComponent\n  },\n  {\n    path: 'drinkers/:drinker',\n    pathMatch: 'full',\n    component: DrinkerDetailsComponent\n  },\n  {\n    path: 'modifications' ,\n    pathMatch: 'full',\n    component: ModificationsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Bar Beer Drinker</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/bars\\\">Bars</a>\\n      </li> \\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/beers\\\">Beers</a>\\n      </li>    \\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/drinkers\\\">Drinkers</a>\\n      </li> \\n      <li class =\\\"nav-item active\\\">\\n        <a class = \\\"nav-link\\\" routerLink=\\\"/modifications\\\">Modifications</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bar-beer-beer-ui';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {TableModule} from 'primeng/table';\nimport{DropdownModule} from 'primeng/dropdown';\nimport {TabViewModule} from 'primeng/tabview';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { BarDetailsComponent } from './bar-details/bar-details.component';\nimport { BeersComponent } from './beers/beers.component';\nimport { BeerDetailsComponent } from './beer-details/beer-details.component';\nimport { DrinkerComponent } from './drinkers/drinkers.component';\nimport { DrinkerDetailsComponent } from './drinker-details/drinker-details.component';\nimport { HomeComponent } from './home/home.component';\nimport { ModificationsComponent } from './modifications/modifications.component';\n\n@NgModule({\n  declarations: [\n    \n    AppComponent,\n    WelcomeComponent,\n    BarDetailsComponent,\n    BeersComponent,\n    BeerDetailsComponent,\n    DrinkerComponent,\n    DrinkerDetailsComponent,\n    HomeComponent,\n    ModificationsComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    TableModule,\n    ReactiveFormsModule,\n    FormsModule,\n    DropdownModule,\n    TabViewModule,\n  ],\n  providers: [HttpClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jhci1kZXRhaWxzL2Jhci1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">{{ barName }}</h1>\\n      <p class=\\\"bar-details\\\" *ngIf=\\\"barDetails\\\">\\n        {{ barDetails?.address }} <span *ngIf=\\\"barDetails.address && barDetails.state\\\">| </span>{{ barDetails?.state}}\\n        <br>\\n        {{ barDetails?.phone }}\\n      </p>\\n    </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"p-3 mb-2 bg-warning text-dark\\\">\\n    <h3 class=\\\"text-center font-weight-light\\\">Menu</h3></div>\\n    <br>\\n    <p-table [value]=\\\"menu\\\">\\n    <ng-template pTemplate=\\\"header\\\">\\n    <tr>\\n    <th class=\\\"text-center\\\">Item</th>\\n    <th class=\\\"text-center\\\">Menufacturer</th>\\n    <th class=\\\"text-center\\\">Price</th>\\n    </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\" let-item>\\n    <tr>\\n    <td class=\\\"text-center\\\">{{ item.item }}</td>\\n    <td class=\\\"text-center\\\">{{ item.manf }}</td>\\n    <td class=\\\"text-center\\\">{{ item.price }}</td>\\n    </tr>\\n    </ng-template>\\n    </p-table>\\n   </div>\\n   <br>\\n\\n   <div class=\\\"container\\\">\\n      <div class=\\\"p-3 mb-2 bg-warning text-dark\\\">\\n        <h3 class=\\\"text-center font-weight-light\\\">Busiest Periods of the Day</h3></div>\\n      <br>\\n      <p-table [value]=\\\"busyday\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n      <tr>\\n      <th class=\\\"text-center\\\">Day</th>\\n      <th class=\\\"text-center\\\">Period</th>\\n      </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-busyday>\\n      <tr>\\n      <td class=\\\"text-center\\\">{{ busyday.day | uppercase }}</td>\\n      <td class=\\\"text-center\\\">{{ busyday.hr }}</td>\\n      </tr>\\n      </ng-template>\\n      </p-table>\\n     </div>\\n\\n     <br>\\n\\n     <div class=\\\"container\\\">\\n        <div class=\\\"p-3 mb-2 bg-warning text-dark\\\">\\n          <h3 class=\\\"text-center font-weight-light\\\">TOP 3 Busiest Days of the Week</h3></div>\\n        <br>\\n        <p-table [value]=\\\"busyweek\\\">\\n        <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n        <th class=\\\"text-center\\\">Day</th>\\n        </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\\"body\\\" let-busyweek>\\n        <tr>\\n        <td class=\\\"text-center\\\">{{ busyweek.day | uppercase }}</td>\\n        </tr>\\n        </ng-template>\\n        </p-table>\\n       </div>\\n\\n     <br>\\n\\n   <div class=\\\"container\\\">\\n     <br>\\n     <div id=\\\"bargraph\\\"></div> \\n   </div>\\n\\n   <br>\\n\\n   <div class=\\\"container\\\">\\n    <br>\\n    <div id=\\\"bargraph2\\\"></div> \\n  </div>\\n  <br>\\n\\n  <div class=\\\"container\\\">\\n    <br>\\n    <div id=\\\"bargraph3\\\"></div> \\n  </div>\\n<br>\\n<br>\\n<div class = \\\"container\\\">\\n    <form [formGroup] = \\\"TransactionForm\\\" (ngSubmit) = \\\"onSubmit2()\\\">\\n        <div class = \\\"formGroup\\\">\\n            <div class=\\\"p-3 mb-2 bg-warning text-dark\\\">\\n          <h3 class=\\\"text-center font-weight-light\\\">Generate Transaction in {{barName}}</h3></div>\\n        <br>\\n          <label>\\n              <h6>Payer Name:</h6>\\n              <select id = \\\"transInsertName\\\" formControlName = \\\"t_payer\\\">\\n                <option *ngFor= \\\"let drinkers of drinker_list\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n              </select>\\n            </label> \\n        <br>\\n            <label>\\n              <b>Time: </b>\\n                <input type = \\\"text\\\" formControlName = \\\"t_time\\\">\\n                (24 hr system. format: hh:mm:ss)\\n              </label> \\n        <br>\\n            <label>\\n              <b>Date: </b>\\n                <input type = \\\"text\\\" formControlName = \\\"t_date\\\">\\n                (format: yyyy-mm-dd)\\n              </label> \\n              \\n        <br>\\n            <label>\\n              <b>Day: </b>\\n                <input type = \\\"radio\\\" formControlName = \\\"t_days\\\" value = \\\"mon\\\">Monday \\n                <input type = \\\"radio\\\" formControlName = \\\"t_days\\\" value = \\\"tue\\\">Tuesday \\n                <input type = \\\"radio\\\" formControlName = \\\"t_days\\\" value = \\\"wed\\\">Wednesday \\n                <input type = \\\"radio\\\" formControlName = \\\"t_days\\\" value = \\\"thur\\\">Thursday \\n                <input type = \\\"radio\\\" formControlName = \\\"t_days\\\" value = \\\"fri\\\">Friday \\n                <input type = \\\"radio\\\" formControlName = \\\"t_days\\\" value = \\\"sat\\\">Saturday \\n                <input type = \\\"radio\\\" formControlName = \\\"t_days\\\" value = \\\"sun\\\">Sunday \\n              </label> \\n        <br>\\n            <label>\\n              <b>Tip: </b>\\n                <input type = \\\"text\\\" formControlName = \\\"t_tip\\\">\\n              </label> \\n        <br>\\n        <label><b>Items: </b>\\n        <select multiple class = \\\"formControl\\\" formControlName=\\\"t_itemname\\\">\\n            <option  *ngFor=\\\"let menu of t_menu\\\" [ngValue] = \\\"menu.item\\\">\\n                   {{menu.item}}</option>\\n         </select>\\n         <p>(*multiple select by ctrl or drag*)</p>\\n        </label>\\n         <br>\\n        <button type = \\\"submit\\\" [disabled] = \\\"!TransactionForm.valid\\\">Submit</button>\\n        <p><b>STATUS: </b>: inserting - {{t_insert}}\\n          <br>Pattern 1 validation check: {{t_insert}}\\n      </div>\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BarsService, Bar, BarMenuItem, Spender, PopBeer, PopManf, BusyDay, BusyWeek, items} from '../bars.service';\nimport { HttpResponse } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport {FormGroup, FormControl, Validators, FormBuilder, MinLengthValidator} from '@angular/forms';\nimport { DrinkersService, Drinker } from '../drinkers.service';\n\ndeclare const Highcharts: any;\n\n@Component({\n  selector: 'app-bar-details',\n  templateUrl: './bar-details.component.html',\n  styleUrls: ['./bar-details.component.css']\n})\nexport class BarDetailsComponent implements OnInit {\n\n  barName: string;\n  barDetails: Bar;\n  menu:BarMenuItem[];\n  spender: Spender[];\n  popBeer: PopBeer[];\n  popManf: PopManf[];\n  busyday: BusyDay[];\n  busyweek: BusyWeek[];\n  items: items[];\n  \n  tid: any;\n  item :string='';  \n  result: items[];\n  insert: boolean;\n  t_insert: boolean;\n  t_vaild: boolean = false;\n\n  output: any[];\n  output1: Array<string>;\n  drinker_list;\n  \n\n  TransactionForm = new FormGroup({\n    t_itemname: new FormControl('',Validators.required),\n    t_payer: new FormControl('',Validators.required),\n    t_time: new FormControl('',Validators.required),\n    t_date: new FormControl('',Validators.required),\n    t_days: new FormControl('',Validators.required),\n    t_tip: new FormControl('',Validators.required),\n  });\n  t_menu;\n\n  constructor(\n    private barService: BarsService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private drinkerService: DrinkersService,\n  ) { \n    route.paramMap.subscribe((paramMap) => {\n      this.barName = paramMap.get('bar');\n\n      barService.getBar(this.barName).subscribe(\n        data => {\n          this.barDetails = data;\n        },\n        (error: HttpResponse<any>) => {\n          if (error.status === 404) {\n             alert('Bar not found');         \n          } else {\n            console.error(error.status + ' - ' + error.body);\n            alert('An error occurred on the server.Please check the browser console.');\n          }\n        }\n      );\n\n      barService.getMenu(this.barName).subscribe(\n        data => {\n          this.menu = data;\n          this.t_menu = data;\n        }\n      );\n\n      barService.getBarLargestSpender(this.barName).subscribe(\n        data =>{\n          this.spender = data;\n\n          console.log(data);\n\n          const drinkers = [];\n          const totalSpending = [];\n\n          data.forEach(spender => {\n            drinkers.push(spender.name);\n            totalSpending.push(spender.totalSpending)\n          });\n\n          this.renderChart(drinkers,totalSpending);\n        }\n      );\n\n      barService.getBeerMostPop(this.barName).subscribe(\n        data =>{\n          this.popBeer = data;\n\n          console.log(data);\n\n          const beers = [];\n          const counts = [];\n\n          data.forEach(popBeer => {\n            beers.push(popBeer.item);\n            counts.push(popBeer.count)\n          });\n\n          this.renderChart2(beers,counts);\n        }\n      );\n      \n      barService.getManfMostBeer(this.barName).subscribe(\n        data =>{\n          this.popManf = data;\n\n          console.log(data);\n\n          const manfs = [];\n          const counts = [];\n\n          data.forEach(popManf => {\n            manfs.push(popManf.manf);\n            counts.push(popManf.count)\n          });\n\n          this.renderChart3(manfs,counts);\n        }\n      );\n\n      barService.getBusiestPeriodDay(this.barName).subscribe(\n        data =>{\n          this.busyday = data;\n        }\n      );\n\n      barService.getBusiestPeriodWeek(this.barName).subscribe(\n        data =>{\n          this.busyweek = data;\n          console.log(data);\n        }\n      );\n\n      \n    });\n  }\n\n  ngOnInit() {\n    this.getDrinkers();\n  }\n  getDrinkers(){\n    this.drinkerService.getDrinkers().subscribe(\n      data => {\n        this.drinker_list = data;\n      },\n      error =>{\n        alert('Could not get list of drinkers');\n      }\n    )\n  }\n  \n  \n  onSubmit2(){\n    console.log(this.TransactionForm.value);\n    console.log(this.TransactionForm.value.t_itemname);\n\n    this.barService.checkVaildTransactionInsert(this.barName, this.TransactionForm.value.t_days, this.TransactionForm.value.t_time).subscribe(\n      data=>{\n        this.t_vaild = true;\n        if(this.t_vaild==true){\n          this.barService.insertTransaction1(this.TransactionForm.value.t_time, this.TransactionForm.value.t_date,this.TransactionForm.value.t_days,this.TransactionForm.value.t_tip).subscribe(\n            data=>{\n              for(let i in this.TransactionForm.value.t_itemname){\n                this.barService.insertTransaction2(this.TransactionForm.value.t_itemname[i]).subscribe(\n                  data=>{\n                    this.barService.insertTransaction3(this.TransactionForm.value.t_payer).subscribe(\n                      data=>{\n                        this.barService.insertTransaction4(this.barName).subscribe(\n                          data=>{\n                            this.tid = data[0].id;\n                            console.log(data[0].id)\n                            this.barService.insertTransaction5(this.tid).subscribe(\n                              data=>{\n                                this.getDrinkers();\n                                this.TransactionForm.reset();\n                                this.t_insert = true;\n                              }\n                            )\n                            this.t_insert=false; \n                          }\n                        )\n                      }\n                    )\n                  } \n                )\n              }\n            }\n          )\n\n        }\n      },\n      error=>{\n        this.t_insert = false; \n\n        alert(\"Unsatisfy pattern 1! Invalid transaction with given time. Please checking the operation time of the day.\")\n\n        this.TransactionForm.reset()\n      }\n    )\n  \n  }\n\n  renderChart(drinkers: string[], totalSpending: number[]){\n    Highcharts.chart('bargraph',{\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'TOP 3 Largest Spenders at ' + this.barName\n      },\n      xAxis: {\n        categories: drinkers,\n        title: {\n          text: 'Drinker'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Total Spending'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        drinkers:{\n          dataLabels: {\n            enabled: true\n          }\n        },\n        series: {\n            color: '#FFC400'\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: totalSpending\n      }]\n    });\n  }\n\n  renderChart2(beers: string[], counts: number[]){\n    Highcharts.chart('bargraph2',{\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'Most Popular Beers at ' + this.barName\n      },\n      subtitle: {\n        text: 'Dealing with tied frequent'\n      },\n      xAxis: {\n        categories: beers,\n        title: {\n          text: 'Beers'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Frequents'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        beers:{\n          dataLabels: {\n            enabled: true\n          }\n        },\n        series: {\n            color: '#FFC400'\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n\n  renderChart3(manfs: string[], counts: number[]){\n    Highcharts.chart('bargraph3',{\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'TOP Manufacturers (Sell Most Beers in ' + this.barName + ')'\n      },\n      subtitle: {\n        text: 'Dealing with tied frequent'\n      },\n      xAxis: {\n        categories: manfs,\n        title: {\n          text: 'Manufacturer'\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Frequents'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions: {\n        manfs:{\n          dataLabels: {\n            enabled: true\n          }\n        },\n        series: {\n            color: '#FFC400'\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      },\n      series: [{\n        data: counts\n      }]\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Http } from '@angular/http';\n\n\nexport interface Bar {\n  name: string;\n  license: string;\n  state: string;\n  phone: string;\n  address: string;\n } \n\n export interface BarMenuItem {\n  item: string;\n  manf: string;\n  price: number;\n } \n \n export interface Spender{\n   bar: string;\n   name: string;\n   totalSpending: number;\n }\n \n export interface PopBeer{\n  bar_name: string;\n  beer: string;\n  count: number;\n }\n\n export interface PopManf{\n   manf: string;\n   count: number;\n }\n\n export interface BusyDay{\n   hr: string;\n   count: number;\n   day: string;\n   bar: string;\n }\n \n export interface BusyWeek{\n   count: number;\n   day: string;\n   bar: string;\n }\n\n  export interface item{\n    name: string;\n  }\n\n  export interface items{\n    bar: string;\n    item: string;\n    price: number;\n  }\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BarsService {\n\n  constructor(\n    public http: HttpClient\n  ) { }\n\n  getBars() {\n    return this.http.get<Bar[]>('/api/bar');\n }\n  \n  getBar(bar: string) {\n     return this.http.get<Bar>('/api/bar/' + bar);\n  }\n\n  getMenu(bar: string){\n      return this.http.get<BarMenuItem[]>('/api/menu/' + bar);\n  }\n\n  getBarLargestSpender(bar: string){\n    return this.http.get<any[]>('/api/bar_largestSpender/'+ bar);\n  }\n\n  getBeerMostPop(bar: string){\n    return this.http.get<any[]>('/api/bar_popBeer/'+ bar);\n  }\n\n  getManfMostBeer(bar: string){\n    return this.http.get<any[]>('/api/bar_popManf/'+ bar);\n  }\n\n  getBusiestPeriodDay(bar: string){\n    return this.http.get<BusyDay[]>('/api/busy_period_day/'+ bar);\n  }\n  \n  getBusiestPeriodWeek(bar: string){\n    return this.http.get<BusyWeek[]>('/api/busy_period_week/'+ bar);\n  }\n\n  getFindBeer(beer: string){\n    return this.http.get<items[]>('/api/beerfind/'+ beer);\n  }\n\n  insertItem(item: string, manf: string, type: string){\n    return this.http.get<any[]>('/api/bar/insert_item/' + item + '/' + manf + '/' + type);\n  }\n  \ninsertTransaction1(time: string, date: string, day: string, tip: number){\n  return this.http.get<any[]>('/api/bar/insert_trans1/' + time + '/' + date +'/' + day +'/'+tip);\n}\n\ninsertTransaction2(item: any){\n  return this.http.get<any[]>('/api/bar/insert_trans2/' + item);\n}\n\ninsertTransaction3(drinker: string){\n  return this.http.get<any[]>('/api/bar/insert_trans3/' + drinker);\n}\n\ninsertTransaction4(bar: string){\n  return this.http.get<any[]>('/api/bar/insert_trans4/' + bar);\n}\n\ncheckVaildTransactionInsert(bar: string, day: string, time: string){\n  return this.http.get<any[]>('/api/bar/check_vaild_transaction_insert/' + bar +'/'+ day+'/'+time);\n}\n\ninsertTransaction5(tid: number){\n  return this.http.get<any[]>('/api/bar/insert_trans5/' + tid);\n}\n\ninsertDrinker(name: string, address: string, state: string, phone: string){\n  return this.http.get<any[]>('/api/insert_drinker/' + name + '/' + address + '/'+ state +'/'+phone);\n}\n\n  insertBar(name: string, license: number, state: string, phone:string, address: string){\n    return this.http.get<any[]>('/api/insert_bar/' + name + '/' + license + '/'+ state +'/'+phone+'/'+address);\n  }\n\n  insertDays(name: string, open: string, close: string, day: string){\n    return this.http.get<any[]>('/api/insert_day/' + name + '/' + open + '/'+ close +'/'+day);\n  }\n\n  insertFrequent(name: string, bar: string){\n    return this.http.get<any[]>('/api/insert_frequent/' + name + '/' + bar);\n  }\n\n  insertOccurs(tid: number, bar: string){\n    return this.http.get<any[]>('/api/insert_occurs/' + tid + '/' + bar);\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlZXItZGV0YWlscy9iZWVyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br>\\n<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">{{ beerName }}</h1>\\n      <p class=\\\"beer-details\\\" *ngIf=\\\"beerDetails\\\">\\n        <p>Manufacturer: {{ beerDetails?.manf }} </p>\\n    </div>\\n</div>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"p-3 mb-2 bg-warning text-dark\\\">\\n      <h3 class=\\\"text-center font-weight-light\\\">TOP 3 BARS</h3></div>\\n  <p class=\\\"text-sm-center font-weight-light\\\">Bars where this beer sells the most.</p>\\n  <p-table [value]=\\\"bar\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n  <tr>\\n  <th class=\\\"text-center\\\">Name</th>\\n  <th class=\\\"text-center\\\">Count</th>\\n  </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-bar>\\n  <tr>\\n  <td class=\\\"text-center\\\">\\n    <a routerLink = \\\"/bars/{{ bar.bar }}\\\">\\n        {{ bar.bar }}\\n    </a>\\n  </td>\\n  <td class=\\\"text-center\\\">{{ bar.count }}</td>\\n  </tr>\\n  </ng-template>\\n  </p-table>\\n </div>\\n <br>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"p-3 mb-2 bg-warning text-dark\\\">\\n      <h3 class=\\\"text-center font-weight-light\\\">TOP 3 CONSUMERS</h3></div>\\n  <p class=\\\"text-sm-center font-weight-light\\\">Drinkers who are the biggest consumers of this beer.</p>\\n  <p-table [value]=\\\"consumer\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n  <tr>\\n  <th class=\\\"text-center\\\">Name</th>\\n  <th class=\\\"text-center\\\">Count</th>\\n  </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-consumer>\\n  <tr>\\n  <td class=\\\"text-center\\\">\\n    <a routerLink= \\\"/drinkers/{{consumer.name}}\\\">\\n      {{ consumer.name }}\\n    </a>\\n    </td>\\n  <td class=\\\"text-center\\\">{{ consumer.count }}</td>\\n  </tr>\\n  </ng-template>\\n  </p-table>\\n </div>\\n <br>\\n <br>\\n <div class=\\\"container\\\">\\n   <div class=\\\"p-3 mb-2 bg-warning text-dark\\\">\\n      <h3 class=\\\"text-center font-weight-light\\\">TOP 3 TIME DISTRIBUTION</h3></div>\\n   \\n   <p class=\\\"text-sm-center font-weight-light \\\">Time distribution of when this beer sells the most.</p>\\n   <p-table [value]=\\\"time\\\">\\n   <ng-template pTemplate=\\\"header\\\">\\n   <tr>\\n   <th class=\\\"text-center\\\">Time Period</th>\\n   <th class=\\\"text-center\\\">Count</th>\\n   </tr>\\n   </ng-template>\\n   <ng-template pTemplate=\\\"body\\\" let-time>\\n   <tr>\\n   <td class=\\\"text-center\\\">{{ time.hr }}</td>\\n   <td class=\\\"text-center\\\">{{ time.count }}</td>\\n   </tr>\\n   </ng-template>\\n   </p-table>\\n  </div>\\n  <br>\\n\\n<p></p>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {BeersService, Beer, biggestConsumer, SellingMostBar,TimeDist} from '../beers.service';\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-beer-details',\n  templateUrl: './beer-details.component.html',\n  styleUrls: ['./beer-details.component.css']\n})\nexport class BeerDetailsComponent implements OnInit {\n\n  beerName: string;\n  beerDetails: Beer;\n  consumer: biggestConsumer[];\n  bar: SellingMostBar[];\n  time: TimeDist[];\n\n  constructor(\n    private beerService: BeersService,\n    private route: ActivatedRoute\n  ) {\n    route.paramMap.subscribe((paramMap) => {\n      this.beerName = paramMap.get('beer');\n\n      beerService.getBiggestConsumer(this.beerName).subscribe(\n        data=>{\n          this.consumer = data;\n        },\n\n        (error: HttpResponse<any>) => {\n          if (error.status === 404) {\n             alert('Consumer not found');         \n          } else {\n            console.error(error.status + ' - ' + error.body);\n            alert('An error occurred on the server.Please check the browser console.');\n          }\n        }\n      );\n\n      beerService.getBarSellMost(this.beerName).subscribe(\n        data=>{\n          this.bar = data;\n        }\n      );\n\n      beerService.getTimeDisBeer(this.beerName).subscribe(\n        data=>{\n          this.time = data;\n        }\n      );\n\n      beerService.getBeer(this.beerName).subscribe(\n        data => {\n          this.beerDetails = data;\n        }\n      );\n\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Beer {\n  name: string;\n  manf: string;\n}\n\nexport interface biggestConsumer {\n  name: string;\n  count: number;\n}\n\nexport interface SellingMostBar{\n  bar: String;\n  count: number;\n}\n\nexport interface TimeDist{\n  hour: string;\n  count: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BeersService {\n\n  constructor(private http: HttpClient) \n  { }\n\n  getBeer(bar: string) {\n    return this.http.get<Beer>('api/beerfind/' + bar);\n  }\n  \n  getBeers(){\n    return this.http.get<Beer[]>('api/beer');\n  }\n\n  getBiggestConsumer(beer: string){\n    return this.http.get<biggestConsumer[]>('api/consumer/' + beer);\n  }\n\n  getBarSellMost(beer: string){\n    return this.http.get<SellingMostBar[]>('api/bar_most/' + beer);\n  }\n\n  getTimeDisBeer(beer:string){\n    return this.http.get<TimeDist[]>('api/beer_timedist/' + beer);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JlZXJzL2JlZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Beer Page</h1>\\n    <p class=\\\"lead\\\"></p>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n    <p-table [value]=\\\"beers\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Name</th>\\n          <th>Manufactuer</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-beer>\\n        <tr>\\n          <td>\\n            <a routerLink=\\\"/beers/{{ beer.name }}\\\">\\n              {{ beer.name }}\\n            </a>\\n          </td>\\n          <td>{{ beer.manf }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n </div>\\n\\n <br><br>\\n\\n<p> </p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {BeersService, Beer} from '../beers.service';\n\n@Component({\n  selector: 'app-beers',\n  templateUrl: './beers.component.html',\n  styleUrls: ['./beers.component.css']\n})\nexport class BeersComponent implements OnInit {\n\n  beers: Beer[];\n\n  constructor(\n    public beerService: BeersService\n  ) { }\n\n  ngOnInit() {\n    this.getBeers();\n  }\n\n  getBeers(){\n    this.beerService.getBeers().subscribe(\n      data => {\n        this.beers = data;\n      },\n      error => {\n        alert('Cannot retrieve the list of beers');\n      }\n    )\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXItZGV0YWlscy9kcmlua2VyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">{{ drinkerName }}</h1>\\n    <p class=\\\"drinker-details\\\" *ngIf=\\\"drinkerDetails\\\">\\n      {{ drinkerDetails?.address }} <span *ngIf=\\\"drinkerDetails.address && drinkerDetails.state\\\">| </span>{{ drinkerDetails?.state}}\\n      <br>\\n      {{ drinkerDetails?.phone }}\\n    </p>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <h2 class=\\\"text-center font-weight-light\\\">Transactions</h2>\\n  <br>\\n  <p-table [value]=\\\"transactions\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n  <tr>\\n    <th>Transaction ID</th>\\n    <th>Date</th>\\n    <th>Time</th>\\n    <th>Tip</th>\\n    <th>Sum</th>\\n  </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-transaction>\\n  <tr>\\n  <td>{{ transaction.tid }}</td>\\n  <td>{{ transaction.date }}</td>\\n  <td>{{ transaction.time }}</td>\\n  <td> {{transaction.tip | currency}} </td>\\n  <td>{{ transaction.totalSum | currency }}</td>\\n  </tr>\\n  </ng-template>\\n  </p-table>\\n </div>\\n <br>\\n <br>\\n <div class = \\\"container\\\">\\n   <br>\\n   <div id = \\\"bargraph_ORDERS_MOST\\\"></div>\\n </div>\\n <br>\\n <br>\\n <div class = \\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-light\\\">{{drinkerName}}'s Spendings</h2>\\n    <p-tabView orientation = \\\"right\\\" >\\n        <p-tabPanel header=\\\"Date\\\">\\n            <form [formGroup] = \\\"spendingsForm_Date\\\" (ngSubmit) = \\\"onSubmitbyDate()\\\">\\n                <label>\\n                  Generate Bar Graph\\n                </label> \\n                 <br>\\n                 <label>\\n                   On Date:\\n                   <input  type = \\\"text\\\" formControlName = \\\"graphDate\\\" required minlength=\\\"10\\\"  maxlength=\\\"10\\\">\\n                   <p>\\n                     (Input Format: YYYY-MM-DD)\\n                  </p>\\n                 </label>\\n                 <br>\\n                 <label>\\n                  At Bar:\\n                   <input type = \\\"text\\\" formControlName = \\\"barName\\\">\\n                 </label>\\n                 <br>\\n                 <div [hidden]=\\\"!successD\\\" id = \\\"bargraph_Drinker_Spending_Date\\\" ></div>\\n                 <br>\\n                 <button type = \\\"submit\\\" [disabled] = \\\"!spendingsForm_Date.valid\\\">Submit</button>\\n                 <br>\\n                 <p> GENERATE GRAPH STATUS: {{successD}} </p>\\n          </form>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"Week\\\">\\n            <form [formGroup] = \\\"spendingsForm_Week\\\" (ngSubmit) = \\\"onSubmitbyWeek()\\\">\\n                <label>\\n                  Generate Bar Graph\\n                </label> \\n                 <br>\\n                 <label>\\n                   On Week Of:\\n                   <input  type = \\\"text\\\" formControlName = \\\"graphWeek\\\" required minlength=\\\"10\\\" required maxlength=\\\"10\\\">\\n                   <p></p>\\n                     (Input Format: YYYY-MM-DD)\\n                  <p></p>\\n                 </label>\\n                 <br>\\n                 <label>\\n                  At Bar:\\n                   <input type = \\\"text\\\" formControlName = \\\"barName\\\">\\n                 </label>\\n                 <br>\\n                 <div [hidden]=\\\"!successW\\\" id = \\\"bargraph_Drinker_Spending_Week\\\"></div>\\n                 <br>\\n                 <button type = \\\"submit\\\" [disabled] = \\\"!spendingsForm_Week.valid\\\">Submit</button>\\n                 <br>\\n                 <p> GENERATE GRAPH STATUS: {{successW}} </p>\\n            </form>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"Month\\\">\\n          <form [formGroup] = \\\"spendingsForm_Month\\\" (ngSubmit) = \\\"onSubmitbyMonth()\\\">\\n                <label>\\n                  Generate Bar Graph\\n                </label> \\n                 <br>\\n                 <label>\\n                   On Month:\\n                   <input  type = \\\"text\\\" formControlName = \\\"graphMonth\\\" required minlength=\\\"7\\\" required maxlength=\\\"7\\\">\\n                   <p>\\n                     (Input Format: YYYY-MM)\\n                  </p>\\n                 </label>\\n                 <br>\\n                 <label>\\n                  At Bar:\\n                   <input type = \\\"text\\\" formControlName = \\\"barName\\\">\\n                 </label>\\n                 <br>\\n                 <div [hidden]=\\\"!successM\\\" id = \\\"bargraph_Drinker_Spending_Month\\\"></div>\\n                 <br>\\n                 <button type = \\\"submit\\\" [disabled] = \\\"!spendingsForm_Month.valid\\\">Submit</button>\\n                 <br>\\n                 <p> GENERATE GRAPH STATUS: {{successM}} </p>\\n          </form>\\n        </p-tabPanel>\\n    </p-tabView>\\n </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute} from '@angular/router';\nimport {DrinkersService, Drinker, DrinkerTransactions, OrderedMost, DrinkerSpendings} from '../drinkers.service';\nimport { HttpResponse } from '@angular/common/http';\nimport { getBootstrapListener } from '@angular/router/src/router_module';\nimport { getNumberOfCurrencyDigits } from '@angular/common';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport { formArrayNameProvider } from '@angular/forms/src/directives/reactive_directives/form_group_name';\n\n\ndeclare const Highcharts: any;\n\n@Component({\n  selector: 'app-drinker-details',\n  templateUrl: './drinker-details.component.html',\n  styleUrls: ['./drinker-details.component.css']\n})\nexport class DrinkerDetailsComponent implements OnInit {\n  drinkerName: string;\n  drinkerDetails: Drinker;\n  transactions: DrinkerTransactions[];\n  mostOrdered: OrderedMost[];\n  spendingsByDate : DrinkerSpendings[];\n  spendingsByWeek: DrinkerSpendings[];\n  spendingsByMonth: DrinkerSpendings[];\n  \n  successD : boolean; \n  successM : boolean;\n  successW : boolean;\n\n  spendingsForm_Date = new FormGroup({\n    graphDate: new FormControl('', Validators.required),\n    barName: new FormControl('', Validators.required),\n  });\n  \n  spendingsForm_Week = new FormGroup({\n    graphWeek: new FormControl('', Validators.required),\n    barName: new FormControl('', Validators.required),\n  });\n\n  spendingsForm_Month = new FormGroup({\n    graphMonth: new FormControl('', Validators.required),\n    barName: new FormControl('', Validators.required ),\n  });\n\n  constructor( \n    private drinkerService: DrinkersService,\n    private route: ActivatedRoute\n  ){\n    route.paramMap.subscribe((paramMap) => {\n      this.drinkerName = paramMap.get('drinker');\n    \n      drinkerService.getDrinker(this.drinkerName).subscribe(\n        data => {\n          this.drinkerDetails = data;\n        },\n        (error: HttpResponse<any>) => {\n          if (error.status === 404) {\n             alert('Drinker not found');         \n          } else {\n            console.error(error.status + ' - ' + error.body);\n            alert('An error occurred on the server.Please check the browser console.');\n          }\n        }\n      );\n     \n      drinkerService.getDrinkerTransactions(this.drinkerName).subscribe(\n        data => {\n          this.transactions = data;\n        },\n        error => {\n            alert('Could not retrieve transactions');\n        }\n      );\n      \n      drinkerService.getMostOrderedBeer(this.drinkerName).subscribe(\n        data => {\n          this.mostOrdered = data; \n          console.log(data);\n\n          const item = [];\n          const count = [];\n          data.forEach(mostOrdered => {\n            item.push(mostOrdered.item);\n            count.push(mostOrdered.count);\n          });\n          this.render_Most_Ordered_Chart(item, count);\n        }\n      )\n    });\n  }\n  ngOnInit() {\n  } \n\n  render_Most_Ordered_Chart(items: string[], count: number[]){\n    Highcharts.chart('bargraph_ORDERS_MOST', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'TOP 3 BEERS ORDERED'\n      },\n      xAxis: {\n        categories: items,\n        title: {\n          text: 'Beer'\n        }\n      },\n      yAxis:{\n        min: 0,\n        title: {\n          text: 'Ordered Count'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions:{\n        items:{\n          dataLabels: {\n            enabled:true\n          }\n        },\n        series: {\n          color: '#FFC400'\n        }\n      },\n      legend: {\n        enabled: false \n      },\n      credits:{\n        enabled: false\n      },\n      series: [{\n        data: count\n      }]\n    })\n  }\n  onSubmitbyDate(){\n    console.log(this.spendingsForm_Date.value);\n    \n      this.drinkerService.getSpendingsByDate(this.drinkerName, this.spendingsForm_Date.value.graphDate, this.spendingsForm_Date.value.barName).subscribe(\n        data => {\n          this.spendingsByDate = data; \n          this.successD = true;\n          console.log(data);\n          if(data.length == 0){\n            this.successD = false;\n            this.spendingsForm_Date.reset();\n            return console.log(\"No Found Spendings for Given Date and Bar\")\n          }\n          const bar = [];\n          const spending = [];\n          data.forEach(spendingsByDate => {\n            spending.push(spendingsByDate.spending);\n            bar.push(spendingsByDate.bar);\n          });\n          this.render_Drinker_Spending_Chart_Date(bar, spending);\n        }\n      )\n      this.successD = false; \n    }\n\n    onSubmitbyWeek(){\n      console.log(this.spendingsForm_Week.value);\n      \n        this.drinkerService.getSpendingsByWeek(this.drinkerName, this.spendingsForm_Week.value.graphWeek, this.spendingsForm_Week.value.barName).subscribe(\n          data => {\n            this.spendingsByWeek = data; \n            this.successW = true;\n            console.log(data);\n            if(data.length == 0){\n              this.successW = false;\n              this.spendingsForm_Date.reset();\n              return console.log(\"No Found Spendings for Given Week and Bar\")\n            }\n          \n            const day = [];\n            const spending = [];\n            data.forEach(spendingsByWeek => {\n              spending.push(spendingsByWeek.spending);\n              day.push(spendingsByWeek.date);\n            });\n            this.render_Drinker_Spending_Chart_Week(day, spending);\n            this.successM = true;\n          }\n        )\n        this.successW = false;\n      }\n      onSubmitbyMonth(){\n        console.log(this.spendingsForm_Month.value);\n        \n          this.drinkerService.getSpendingsByMonth(this.drinkerName, this.spendingsForm_Month.value.graphMonth, this.spendingsForm_Month.value.barName).subscribe(\n            data => {\n              this.spendingsByMonth = data;\n              this.successM = true;  \n              console.log(data);\n\n              if(data.length == 0){\n                this.successM = false;\n                this.spendingsForm_Date.reset();\n                return console.log(\"No Found Spendings for Given Month and Bar\")\n              }\n              const day = [];\n              const spending = [];\n              data.forEach(spendingsByMonth => {\n                spending.push(spendingsByMonth.spending);\n                day.push(spendingsByMonth.date);\n              });\n              this.render_Drinker_Spending_Chart_Month(day, spending);\n            }\n          )\n          this.successM = false; \n        }\n\n  render_Drinker_Spending_Chart_Date(bars: string[], spendings: number[]){\n    Highcharts.chart('bargraph_Drinker_Spending_Date', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'SPENDINGS on ' + this.spendingsForm_Date.value.graphDate\n      },\n      xAxis: {\n        categories: bars,\n        title: {\n          text: 'Bar'\n        }\n      },\n      yAxis:{\n        min: 0,\n        title: {\n          text: 'Total Spendings'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions:{\n        items:{\n          dataLabels: {\n            enabled:true\n          }\n        },\n        series: {\n          color: '#FFC400'\n        }\n      },\n      legend: {\n        enabled: false \n      },\n      credits:{\n        enabled: false\n      },\n      series: [{\n        data: spendings\n      }]\n    })\n  }\n  render_Drinker_Spending_Chart_Week(dates: string[], spendings: number[]){\n    Highcharts.chart('bargraph_Drinker_Spending_Week', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'SPENDINGS WEEK OF ' + this.spendingsForm_Week.value.graphWeek\n      },\n      xAxis: {\n        categories: dates,\n        title: {\n          text: 'Date'\n        }\n      },\n      yAxis:{\n        min: 0,\n        title: {\n          text: 'Total Spendings'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions:{\n        items:{\n          dataLabels: {\n            enabled:true\n          }\n        },\n        series: {\n          color: '#FFC400'\n        }\n      },\n      legend: {\n        enabled: false \n      },\n      credits:{\n        enabled: false\n      },\n      series: [{\n        data: spendings\n      }]\n    })\n  }\n  render_Drinker_Spending_Chart_Month(dates: string[], spendings: number[]){\n    Highcharts.chart('bargraph_Drinker_Spending_Month', {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: 'SPENDINGS for ' + this.spendingsForm_Month.value.graphMonth\n      },\n      xAxis: {\n        categories: dates,\n        title: {\n          text: 'DATE'\n        }\n      },\n      yAxis:{\n        min: 0,\n        title: {\n          text: 'Total Spendings'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      plotOptions:{\n        items:{\n          dataLabels: {\n            enabled:true\n          }\n        },\n        series: {\n          color: '#FFC400'\n        }\n      },\n      legend: {\n        enabled: false \n      },\n      credits:{\n        enabled: false\n      },\n      series: [{\n        data: spendings\n      }]\n    })\n  }\n\n\n}\n\n\n  \n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Drinker {\n  name: string; \n  address: string;\n  state: string;\n  phone: string;\n}\nexport interface DrinkerName{\n  name:string;\n}\nexport interface DrinkerTransactions{\n  tid: string;\n  date: string;\n  time: string;\n  tip: number;\n  totalSum: number; \n}\nexport interface OrderedMost{\n  item: string;\n  count: number;\n}\nexport interface DrinkerSpendings{\n  bar: string;\n  spending: number;\n  date: string;\n\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrinkersService {\n\n  constructor(\n    public http: HttpClient\n  ) { }\n\n  getDrinkers(){\n    return this.http.get<Drinker[]>('/api/drinker');\n  }\n  getDrinkersFromLikes(){\n    return this.http.get<DrinkerName[]>('/api/drinker/likes');\n  }\n  getDrinkersFromFreqs(){\n    return this.http.get<DrinkerName[]>('/api/drinker/frequents');\n  }\n  getDrinker(drinker: string){\n    return this.http.get<Drinker>('/api/drinker/' + drinker);\n  }\n  getDrinkerTransactions(drinker: string){\n    return this.http.get<DrinkerTransactions[]>('/api/transactions/' + drinker);\n  }\n  getMostOrderedBeer(drinker: string){\n    return this.http.get<OrderedMost[]>('/api/most_ordered_beer/' + drinker);\n  }\n  getSpendingsByDate(drinker:string, date:number, bar:string){\n    return this.http.get<DrinkerSpendings[]>('/api/drinker_spendings_date/'+ drinker + '/' + bar + '/' + date);\n  }\n  getSpendingsByWeek(drinker:string, week: number, bar:string){\n    return this.http.get<DrinkerSpendings[]>('/api/drinker_spendings_week/' + drinker+'/' + bar+'/' + week);\n  }\n  getSpendingsByMonth(drinker:string, month: number, bar:string){\n    return this.http.get<DrinkerSpendings[]>('/api/drinker_spendings_month/'+ drinker+'/' + bar+'/' + month );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaW5rZXJzL2RyaW5rZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Drinkers Page</h1>\\n    <p class=\\\"lead\\\"></p>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n    <p-table [value]=\\\"drinkers\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Name</th>\\n          <th>Address</th>\\n          <th>State</th>\\n          <th>Phone</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-drinker>\\n        <tr>\\n          <td>\\n            <a routerLink=\\\"/drinkers/{{ drinker.name }}\\\">\\n              {{ drinker.name }}\\n            </a>\\n          </td>\\n          <td>{{ drinker.address }}</td>\\n          <td>{{ drinker.state }}</td>\\n          <td>{{ drinker.phone }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n </div>\\n\\n <br><br>\"","import { Component, OnInit } from '@angular/core';\nimport { DrinkersService, Drinker } from '../drinkers.service';\n\n@Component({\n  selector: 'app-drinkers',\n  templateUrl: './drinkers.component.html',\n  styleUrls: ['./drinkers.component.css']\n})\nexport class DrinkerComponent implements OnInit {\n\n  drinkers: Drinker[];\n  \n  constructor(\n    public drinkerService: DrinkersService\n  ) { }\n\n  ngOnInit() {\n    this.getDrinkers();\n  }\n\n  getDrinkers() {\n    this.drinkerService.getDrinkers().subscribe(\n      data => {\n         this.drinkers = data;\n      },\n      error => {\n        alert('Could not retrieve a list of drinkers');\n      }\n    );\n  }\n   \n}\n\n","module.exports = \"#outer \\r\\n{\\r\\n    width: 100%;\\r\\n    text-align : center;\\r\\n}\\r\\n.inner\\r\\n{\\r\\n    display: inline-block;\\r\\n    width:130px; \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksWUFBWTtJQUNaLG9CQUFvQjtDQUN2QjtBQUNEOztJQUVJLHNCQUFzQjtJQUN0QixZQUFZO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNvdXRlciBcclxue1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduIDogY2VudGVyO1xyXG59XHJcbi5pbm5lclxyXG57XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDoxMzBweDsgXHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">Home Page</h1>\\n      <h2 class=\\\"display-4\\\" > Welcome to our Bar Beer Drinker Webpage</h2>\\n      <p class=\\\"lead\\\"></p>\\n    </div>\\n</div>\\n\\n<div class = \\\"container\\\">\\n  <div id =\\\"outer\\\">\\n    <h5>Click to View</h5>\\n    <div class = \\\"inner\\\"><button type = \\\"button\\\">\\n        <a routerLink =\\\"/bars/\\\">\\n          Bars\\n        </a></button> \\n    </div>\\n    <div class = \\\"inner\\\"><button type = \\\"button\\\">\\n        <a routerLink =\\\"/beers/\\\">\\n           Beers\\n        </a></button> \\n    </div>\\n    <div class = \\\"inner\\\"><button type = \\\"button\\\">\\n          <a routerLink =\\\"/drinkers/\\\">\\n            Drinkers\\n          </a></button> \\n    </div>\\n    <div class = \\\"inner\\\"><button type =\\\"button\\\">\\n          <a routerLink =\\\"/modifications/\\\">\\n            Modifications\\n          </a></button>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Item{\n  name: string;\n  manf: string;\n  type: string;\n}\nexport interface Transaction{\n  id: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModificationsService {\n\n  constructor(\n    public http: HttpClient\n  ) { }\n\n\n  updateDrinker(name: string, column: string, value: string){\n    return this.http.get<any[]>('/api/modifications/update_drinker/'+ name + '/' + column+ '/' + value);\n  }\n  insertDrinker(name: string, address: string, state: string, phone: string){\n    return this.http.get<any[]>('/api/modifications/insert_drinker/' + name + '/' + address + '/'+ state +'/'+phone);\n  }\n  updateBar(name: string, column: string, value: string){\n    return this.http.get<any[]>('/api/modifications/update_bar/'+ name + '/' + column+ '/' + value);\n  }\n  runAnyQuery(query: any){\n    return this.http.get<any[]>('/api/any_query/' + query);\n  }\n  insertBar(name: string, license: number, state: string, phone:string, address: string){\n    return this.http.get<any[]>('/api/insert_bar/' + name + '/' + license + '/'+ state +'/'+phone+'/'+address);\n  }\n  updateFrequent(name: string, oldbar: string, newbar:string){\n    return this.http.get<any[]>('/api/update_frequent/' + name+'/' + oldbar+ '/' +newbar);\n  }\n\n  insertFrequent(name: string, bar: string){\n    return this.http.get<any[]>('/api/insert_frequent/' + name + '/' + bar);\n  }\n  insertLikes(name: string, beer: string){\n    return this.http.get<any[]>('/api/insert_likes/' + name + '/' + beer);\n  }\n  insertOccurs(tid: number, bar: string){\n    return this.http.get<any[]>('/api/insert_occurs/' + tid + '/' + bar);\n  }\n  getItems(){\n    return this.http.get<Item[]>('/api/item');\n  }\n  updateItem(name: string, column: string, value: string){\n    return this.http.get<any[]>('/api/modifications/update_item/'+ name + '/' + column+ '/' + value);\n  }\n  updateLike(name: string, oldval: string, newval:string){\n    return this.http.get<any[]>('/api/modifications/update_like/'+ name +'/' +oldval+'/' + newval);\n  }\n  insertItem(item: string, manf: string, type: string){\n    return this.http.get<any[]>('/api/bar/insert_item/' + item + '/' + manf + '/' + type);\n  }\n  deleteDrinker(name: string){\n    return this.http.get<any[]>('/api/delete_drinker/' + name);\n  }\n  deleteBar(name: string){\n    return this.http.get<any[]>('/api/delete_bar/' + name);\n  }\n  \n  deleteFrequent(bar: string, name: string){\n    return this.http.get<any[]>('/api/delete_frequent/' + bar +'/'+ name);\n  }\n  insertSells(bar: string, item: string, price: number){\n    return this.http.get<any[]>('/api/insert_sells/' + bar + '/' + item +'/'+price);\n  }\n\n  verifyPattern3_1(bar: string, beer: string){\n    return this.http.get<any[]>('/api/verify_pattern3_1/' + bar + '/' + beer);\n  }\n\n  verifyPattern3_2(bar: string, beer: string, price: number){\n    return this.http.get<any[]>('/api/verify_pattern3_2/' + bar + '/' + beer + '/' + price);\n  }\n\n  verifyPattern3_0(item: string){\n    return this.http.get<any[]>('/api/verify_pattern3_0/' + item);\n  }\n  insertHas(tid: number, item: string){\n    return this.http.get<any[]>('/api/insert_has/' + tid + '/' + item);\n  }\n  deleteItem(name: string){\n    return this.http.get<any[]>('/api/delete_item/' + name);\n  }\n  deleteSell(bar: string, item: string){\n    return this.http.get<any[]>('/api/delete_sells/' + bar + '/' + item);\n  }\n  deleteLike(name: string, beer: string){\n    return this.http.get<any[]>('/api/delete_like/' + name + '/' + beer);\n  }\n  deleteOccur(tid: number, bar:string){\n    return this.http.get<any[]>('/api/delete_occur/' + tid + '/' + bar);\n  }\n  deleteHas_valid(tid: number, item: string){\n    return this.http.get<any[]>('/api/delete_has_valid/' + tid +'/'+ item);\n  }\n\n  deleteHas_lastItem(tid:number){\n    return this.http.get<any[]>('/api/delete_has_lastItem/' + tid);\n  }\n  deleteHas(tid: number, item: string){\n    return this.http.get<any[]>('/api/delete_has/' + tid +'/'+ item);\n  }\n  deleteDay(bar: string, day: string){\n    return this.http.get<any[]>('/api/delete_day/' + bar +'/'+day);\n  }\n  deletePay(tid: number, name:string){\n    return this.http.get<any[]>('/api/delete_pays/' + tid + '/' + name);\n  }\n  updatePay(tid: number,oldpayer: string, newpayer:string){\n    return this.http.get<any[]>('/api/update_pays/'+tid +'/' + oldpayer + '/' + newpayer);\n  }\n  updateHas(tid: number, olditem: string, newitem: string){\n    return this.http.get<any[]>('/api/update_has/'+tid +'/' + olditem + '/' + newitem);\n  }\n  insertPay(tid: number, name: string){\n    return this.http.get<any[]>('/api/insert_pay/' + tid +'/'+name);\n  }\n  insertDays(name: string, open: string, close: string, day: string){\n    return this.http.get<any[]>('/api/insert_day/' + name + '/' + open + '/'+ close +'/'+day);\n  }\n  deleteTrans(tid: number){\n    return this.http.get<any[]>('/api/delete_trans/' + tid );\n  }\n  update_days_bar(bar:string, day: string, newVal : string){\n    return this.http.get<any[]>('/api/update_day_bar/' + bar+ '/'+ day+ '/'+ newVal);\n  }\n  update_days_pattern1validation_open(bar:string, day:string, openTime: string){\n    return this.http.get<any[]>('/api/update_day_openingTime/'+ bar+ '/'+day+'/'+openTime);\n  }\n  update_days_pattern1validation_close(bar:string, day:string, closeTime: string){\n    return this.http.get<any[]>('/api/update_day_closingTime/'+bar+'/'+ day+'/' + closeTime);\n  }\n  update_days_daycolumn(bar:string, day:string, newVal:string){\n    return this.http.get<any[]>('/api/update_days_daycolumn/'+bar+'/'+ day+ '/'+ newVal);\n  }\n\n\n \n}\n","module.exports = \"table{\\r\\n    width: 100%;\\r\\n    margin: 20px auto;\\r\\n    table-layout:fixed;\\r\\n    border-collapse: collapse;\\r\\n    border-spacing: 0;\\r\\n}\\r\\nth, td{\\r\\n    padding: 8px;\\r\\n    vertical-align: top;\\r\\n    border: 1px solid #ddd;\\r\\n    padding-top: 12px;\\r\\n    padding-bottom: 12px;\\r\\n    text-align: left;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kaWZpY2F0aW9ucy9tb2RpZmljYXRpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQiwwQkFBMEI7SUFDMUIsa0JBQWtCO0NBQ3JCO0FBQ0Q7SUFDSSxhQUFhO0lBQ2Isb0JBQW9CO0lBQ3BCLHVCQUF1QjtJQUN2QixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGlCQUFpQjs7Q0FFcEIiLCJmaWxlIjoic3JjL2FwcC9tb2RpZmljYXRpb25zL21vZGlmaWNhdGlvbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW46IDIwcHggYXV0bztcclxuICAgIHRhYmxlLWxheW91dDpmaXhlZDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBib3JkZXItc3BhY2luZzogMDtcclxufVxyXG50aCwgdGR7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICAgIHBhZGRpbmctdG9wOiAxMnB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEycHg7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Modifications Page</h1>\\n    <p class=\\\"lead\\\"></p>\\n  </div>\\n</div>\\n\\n<div class = \\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-dark\\\">Drinkers Table Modifications</h2>\\n    <br>\\n    <table>\\n      <tr>\\n        <td>\\n          <h5>UPDATE </h5> \\n          <label>SELECT DRINKER TO UPDATE</label>\\n          <form [formGroup] = \\\"drinkerUpdateForm\\\" (ngSubmit) =\\\"onSubmitDrinkerUpdate()\\\">\\n            <label>\\n              <h6>Name:</h6>\\n              <select id = \\\"drinkerUpdate\\\" formControlName = \\\"drinkerName\\\">\\n                  <option *ngFor= \\\"let drinkers of drinkerName_UPDATE\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n              </select>\\n            </label>\\n            <br>\\n            <label>\\n                <h6>Update Attribute: </h6>\\n                  <input type = \\\"radio\\\" formControlName = \\\"drinkerColumn\\\" value = \\\"name\\\">Name \\n                  <input type = \\\"radio\\\" formControlName = \\\"drinkerColumn\\\" value = \\\"address\\\">Address \\n                  <input type = \\\"radio\\\" formControlName = \\\"drinkerColumn\\\" value = \\\"state\\\">State \\n                  <input type = \\\"radio\\\" formControlName = \\\"drinkerColumn\\\" value = \\\"phone\\\">Phone \\n            </label> \\n            <br>\\n            <label>\\n              <h6>New Value:</h6>\\n              <input type = \\\"text\\\" formControlName = \\\"drinkerupdateValue\\\">\\n            </label>\\n            <br>\\n              <div>\\n                <button type = \\\"submit\\\" [disabled] =\\\"!drinkerUpdateForm.valid\\\">Submit</button>\\n              </div>\\n              <p>status for Update: {{drinkerUpdateStatus}}</p>\\n            </form>\\n        </td>\\n        <td >\\n          <h5>INSERT </h5> \\n          <label>INPUT DRINKER INFO</label>\\n          <form [formGroup] = \\\"insertDrinkerForm\\\" (ngSubmit) = \\\"onSubmit4()\\\">\\n               <label>\\n                <h6>Name:</h6>\\n                 <input type = \\\"text\\\" formControlName = \\\"drinkerName\\\" minlength=\\\"1\\\">\\n               </label>\\n               <br>\\n               <label>\\n                <h6>Address:</h6>\\n                 <input type = \\\"text\\\" formControlName = \\\"drinkerAddress\\\" minlength=\\\"1\\\">\\n               </label>\\n               <br>\\n               <label>\\n                <h6>State:</h6>\\n               <p-dropdown [options] = \\\"list_states\\\" formControlName = \\\"drinkerState\\\"></p-dropdown>\\n              </label>\\n              <br>\\n               <label>\\n                 <h6>Phone</h6>\\n                   <input type = \\\"text\\\" formControlName = \\\"drinkerPhone\\\" minlength=\\\"12\\\" maxlength=\\\"12\\\">\\n                   <br>\\n                   (format xxx-xxx-xxxx)\\n                 </label>\\n               <p></p>\\n               <button type = \\\"submit\\\" [disabled] = \\\"!insertDrinkerForm.valid\\\">Submit</button>\\n              <p>status: inserting - {{drinker_insert}}\\n            </form>\\n        </td>\\n        <td>\\n          <h5>DELETE</h5>\\n          <label>SELECT THE DRINKER TO DELETE</label>\\n          <form [formGroup] = \\\"deleteDrinkerForm\\\" (ngSubmit) = \\\"delete_drinker()\\\">\\n               <label>\\n                 <h6>Drinker Name: </h6>\\n                 <select id = \\\"drinkerDelete\\\" formControlName = \\\"D_drinkerName\\\">\\n                    <option *ngFor= \\\"let drinkers of drinkerName_UPDATE\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                </select>\\n               </label>\\n               <br>\\n               <p></p>\\n               <button type = \\\"submit\\\" [disabled] = \\\"!deleteDrinkerForm.valid\\\">Submit</button>\\n              <p>status: deleting - {{drinker_delete}}\\n          </form>\\n        </td>\\n      </tr>\\n    </table>\\n</div>\\n<br>\\n<div class = \\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-dark\\\">Bars Table Modifications</h2>\\n    <br>\\n    <table>\\n      <tr>\\n        <td>\\n          <h5>UPDATE </h5>\\n          <label>SELECT BAR TO UPDATE</label>\\n          <b></b>\\n          <form [formGroup] = \\\"barUpdateForm\\\" (ngSubmit) =\\\"onSubmitBarUpdate()\\\">\\n            <label>\\n              <h6>Name: </h6>\\n              <select id = \\\"barUpdate\\\" formControlName = \\\"barName\\\">\\n                <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n              </select>\\n            </label>\\n            <br>\\n            <label>\\n                <h6>Update Attribute: </h6>\\n                  <input type = \\\"radio\\\" formControlName = \\\"barColumn\\\" value = \\\"name\\\">Name \\n                  <input type = \\\"radio\\\" formControlName = \\\"barColumn\\\" value = \\\"license\\\">License \\n                  <input type = \\\"radio\\\" formControlName = \\\"barColumn\\\" value = \\\"state\\\">State \\n                  <input type = \\\"radio\\\" formControlName = \\\"barColumn\\\" value = \\\"phone\\\">Phone\\n                  <input type = \\\"radio\\\" formControlName = \\\"barColumn\\\" value = \\\"address\\\">Address\\n            </label> \\n            <br>\\n            <label>\\n              <h6>New Value: </h6>\\n              <input type = \\\"text\\\" formControlName = \\\"barupdateValue\\\">\\n            </label>\\n            <br>\\n              <div>\\n                <button type = \\\"submit\\\" [disabled] =\\\"!barUpdateForm.valid\\\">Submit</button>\\n              </div>\\n              <p>status for Update: {{barUpdateStatus}}</p>\\n            </form>\\n        </td>\\n        <td>\\n            <h5>INSERT</h5>\\n            <label>INPUT BAR INFO</label>\\n            <form [formGroup] = \\\"insertBarForm\\\" (ngSubmit) = \\\"onSubmit5()\\\">\\n                 <label>\\n                  <h6>Name: </h6>\\n                   <input type = \\\"text\\\" formControlName = \\\"barName\\\">\\n                 </label>\\n                 <br>\\n                 <label>\\n                  <h6>License Number: </h6>\\n                   <input type = \\\"number\\\" formControlName = \\\"barLicense\\\" required minlength=\\\"4\\\" maxlength=\\\"5\\\" >\\n                   <br>\\n                   (4 or 5 digit number required)\\n                 </label>\\n                 <br>\\n                 <label>\\n                  <h6>State: </h6>\\n                  <p-dropdown [options] = \\\"list_states\\\" formControlName = \\\"barState\\\"></p-dropdown>\\n                </label>\\n                 <br>\\n                 <label>\\n                    <h6>Phone: </h6>\\n                     <input type = \\\"text\\\" formControlName = \\\"barPhone\\\" minlength=\\\"12\\\" maxlength=\\\"12\\\">\\n                     <br>\\n                     (format xxx-xxx-xxxx)\\n                   </label>\\n                   <br>\\n                   <label>\\n                      <h6>Address: </h6>\\n                       <input type = \\\"text\\\" formControlName = \\\"barAddress\\\">\\n                     </label>\\n                 <p></p>\\n                 <button type = \\\"submit\\\" [disabled] = \\\"!insertBarForm.valid\\\">Submit</button>\\n                <p>status: inserting - {{bar_insert}}\\n            \\n              </form>\\n        </td>\\n        <td>\\n          <h5>DELETE</h5>\\n          <form [formGroup] = \\\"deleteBarForm\\\" (ngSubmit) = \\\"delete_Bar()\\\">\\n              <label>\\n                SELECT BAR TO DELETE\\n              </label> \\n               <label>\\n                 <h6>Bar Name:</h6>\\n                 <select id = \\\"barDelete\\\" formControlName = \\\"deleteBar\\\">\\n                    <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n                  </select>\\n               </label>\\n              <br>\\n               <p></p>\\n               <button type = \\\"submit\\\" [disabled] = \\\"!deleteBarForm.valid\\\">Submit</button>\\n              <p>status: deleting - {{bar_delete}}\\n            </form>\\n        </td>\\n      </tr>\\n    </table>\\n</div>\\n<br>\\n<div class = \\\"container\\\">\\n  <h2 class=\\\"text-center font-weight-dark\\\">Items Table Modifications</h2>\\n  <br>\\n  <table>\\n    <tr>\\n      <td>\\n        <h5>UPDATE</h5>\\n        <label>SELECT ITEM TO UPDATE</label>\\n          <form [formGroup] = \\\"updateItemForm\\\" (ngSubmit) =\\\"onSubmitItemUpdate()\\\">\\n              <label>\\n                <h6>Item Name:</h6>\\n                <select id = \\\"itemUpdateName\\\" formControlName = \\\"itemName\\\">\\n                  <option *ngFor= \\\"let item of itemName_list\\\" [ngValue] = \\\"item.name\\\">{{item.name}}</option>\\n                </select>\\n              </label>\\n              <br>\\n              <label>\\n                <h6>Update Attribute: </h6>\\n                  <input type = \\\"radio\\\" formControlName = \\\"itemColumn\\\" value = \\\"name\\\">Name \\n                  <input type = \\\"radio\\\" formControlName = \\\"itemColumn\\\" value = \\\"manf\\\">Manufacturer \\n              </label> \\n              <br>\\n              <label>\\n                <h6>New Value:</h6>\\n                <input type = \\\"text\\\" formControlName = \\\"itemUpdateValue\\\">\\n              </label>\\n              <br>\\n              <div>\\n                <button type = \\\"submit\\\" [disabled] =\\\"!updateItemForm.valid\\\">Submit</button>\\n              </div>\\n              <p>status for Update: {{item_updateStatus}}</p>\\n          </form>\\n      </td>\\n      <td>\\n        <h5>INSERT</h5>\\n        <label>INPUT ITEM INFO</label>\\n        <form [formGroup] = \\\"insertItemForm\\\" (ngSubmit) = \\\"onSubmitItemInsert()\\\">\\n           <label>\\n             <h6>Name: </h6>\\n             <input type = \\\"text\\\" formControlName = \\\"itemName\\\">\\n           </label>\\n           <br>\\n           <label>\\n            <h6>Manufacturer: </h6>\\n             <input type = \\\"text\\\" formControlName = \\\"itemManf\\\">\\n           </label>\\n           <br>\\n           <label>\\n            <h6>Type: </h6>\\n             <input type = \\\"radio\\\" formControlName = \\\"itemType\\\" value = \\\"Beer\\\">Beer\\n             <input type = \\\"radio\\\" formControlName = \\\"itemType\\\" value = \\\"SoftDrink\\\">Soft Drink\\n             <input type = \\\"radio\\\" formControlName = \\\"itemType\\\" value = \\\"Food\\\">Food\\n           </label>\\n           <p></p>\\n           <button type = \\\"submit\\\" [disabled] = \\\"!insertItemForm.valid\\\">Submit</button>\\n          <p>status: inserting - {{insertItemStatus}}\\n        </form>\\n        <br>\\n      </td>\\n      <td>\\n        <h5>DELETE</h5>\\n        <form [formGroup] = \\\"deleteItemForm\\\" (ngSubmit) = \\\"delete_item()\\\">\\n          <label>SELECT ITEM TO DELETE</label> \\n          <br>\\n          <label> \\n            <h6>Item Name:</h6>\\n            <select id = \\\"itemDeleteName\\\" formControlName = \\\"D_itemname\\\">\\n                <option *ngFor= \\\"let item of itemName_list\\\" [ngValue] = \\\"item.name\\\">{{item.name}}</option>\\n            </select>\\n          </label>\\n           <p></p>\\n           <button type = \\\"submit\\\" [disabled] = \\\"!deleteItemForm.valid\\\">Submit</button>\\n          <p>status: deleting - {{item_delete}}\\n        </form>\\n      </td> \\n    </tr>\\n  </table>\\n</div>\\n<br>\\n<div class = \\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-dark\\\">Sells Table Modifications</h2>\\n    <br>\\n    <table>\\n      <tr>\\n        <td>\\n          <h5>UPDATE</h5>\\n        </td>\\n        <td>\\n            <h5>INSERT</h5>\\n            <form [formGroup] = \\\"insertSellsform\\\" (ngSubmit) = \\\"onSubmit10()\\\">\\n                <label>\\n                  INPUT SELLS INFO\\n                </label> \\n                 <br>\\n                 <label>\\n                    <h6>Bar Name: </h6>\\n                    <select id = \\\"sellsInsertBar\\\" formControlName = \\\"sellBar\\\">\\n                      <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n                    </select>\\n                </label>\\n                 <br>\\n                 <label>\\n                    <h6>Item Name:</h6>\\n                    <select id = \\\"sellsInsertItem\\\" formControlName = \\\"sellItem\\\">\\n                      <option *ngFor= \\\"let item of itemName_list\\\" [ngValue] = \\\"item.name\\\">{{item.name}}</option>\\n                    </select>\\n                  </label>\\n                <br>\\n                <label>\\n                    <h6>Price: </h6>\\n                     <input type = \\\"number\\\" formControlName = \\\"sellPrice\\\" minlength=\\\"1\\\" >\\n                   </label>\\n                  <br>\\n                 <p></p>\\n                 <button type = \\\"submit\\\" [disabled] = \\\"!insertSellsform.valid\\\">Submit</button>\\n                <p>status: inserting - {{sell_insert}}\\n                <br>Pattern 3 validation check: {{sell_insert}}\\n              </form>\\n        </td>\\n        <td>\\n          <h5>DELETE</h5>\\n          <form [formGroup] = \\\"deleteSellForm\\\" (ngSubmit) = \\\"delete_sell()\\\">\\n            <label>SELECT BAR-ITEM TO DELETE</label> \\n            <br>\\n             <label>\\n               <h6>Bar: </h6>\\n                <select id = \\\"sellsDeletetBar\\\" formControlName = \\\"D_sellBar\\\">\\n                  <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n                </select>\\n              </label>\\n              <br>\\n              <label>\\n                <h6>Item Name:</h6>\\n                <select id = \\\"sellsDeleteItem\\\" formControlName = \\\"D_sellItem\\\">\\n                  <option *ngFor= \\\"let item of itemName_list\\\" [ngValue] = \\\"item.name\\\">{{item.name}}</option>\\n                </select>\\n              </label>\\n             <p></p>\\n             <button type = \\\"submit\\\" [disabled] = \\\"!deleteSellForm.valid\\\">Submit</button>\\n            <p>status: deleting - {{sell_delete}}\\n          </form>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n<br>\\n<div class = \\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-dark\\\">Frequents Table Modifications</h2>\\n    <br>\\n    <table>\\n      <tr>\\n        <td>\\n          <h5>UPDATE </h5>\\n          <label>SELECT DRINKER-BAR TO UPDATE</label>\\n          <form [formGroup] = \\\"updateFreqsForm\\\" (ngSubmit) =\\\"onSubmitFreqsUpdate()\\\">\\n              <label>\\n                <h6>Drinker Name:</h6>\\n                <select id = \\\"freqUpdateName\\\" formControlName = \\\"freqDrinker\\\">\\n                  <option *ngFor= \\\"let drinkers of drinkerName_UPDATE\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                </select>\\n              </label> \\n              <br>\\n              <label>Update the Bar Frequeted</label>\\n              <br>\\n              <label>\\n                <h6>Old Value: </h6>\\n                <select id =\\\"freqUpdateBar1\\\" formControlName =\\\"freqOldBar\\\">\\n\\t\\t\\t            <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n                </select>\\n            </label>\\n            <br>\\n            <label>\\n                <h6>New Value: </h6>\\n                <select id =\\\"freqUpdateBar1\\\" formControlName =\\\"freqNewBar\\\">\\n                    <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n                </select>\\n            </label>\\n            <br>\\n              <div>\\n                <button type = \\\"submit\\\" [disabled] =\\\"!updateFreqsForm.valid\\\">Submit</button>\\n              </div>\\n              <p>status for Update: {{freqs_updateStatus}}</p>\\n\\t\\t          <br>Pattern 2 Verfication check : {{pattern2_bool}}\\n          </form>\\n \\n        </td>\\n        <td>\\n            <h5>INSERT </h5> \\n            <form [formGroup] = \\\"insertFreqForm\\\" (ngSubmit) = \\\"onSubmit7()\\\">\\n                <label>\\n                  INPUT FREQUENTS INFO\\n                </label> \\n                 <br>\\n                 <label>\\n                    <h6>Name: </h6>\\n                    <select id = \\\"freqInsertName\\\" formControlName = \\\"freqName\\\">\\n                        <option *ngFor= \\\"let drinkers of drinkerName_UPDATE\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                    </select>\\n                  </label>\\n                 <br>\\n                 <label>\\n                   <h6>Bar Name: </h6>\\n                    <select id = \\\"freqInsertBar\\\" formControlName = \\\"freqBar\\\">\\n                      <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n                    </select>\\n                 </label>\\n                <br>\\n                 <p></p>\\n                 <button type = \\\"submit\\\" [disabled] = \\\"!insertFreqForm.valid\\\">Submit</button>\\n                <p>status: inserting - {{freq_insert}}\\n                <br>Pattern 2 Verfication check : {{pattern2_bool}}\\n              </form>\\n        </td>\\n        <td>\\n          <h5>DELETE</h5>\\n          <form [formGroup] = \\\"deleteFreqForm\\\" (ngSubmit) = \\\"delete_freq()\\\">\\n              <label>SELECT FREQUENTS INFO TO DELETE</label>\\n               <label>\\n                  <h6>Drinker Name: </h6>\\n                  <select id=\\\"freqDeleteName\\\" formControlName =\\\"D_freqName\\\">\\n                    <option *ngFor= \\\"let drinkers of drinkerFreqs_list\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                  </select>\\n                </label>\\n               <br>\\n               <label>\\n                <h6>Bar Name: </h6>\\n                <select id=\\\"freqDeleteBar\\\" formControlName =\\\"D_freqBar\\\">\\n                  <option *ngFor =\\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>}\\n                </select>\\n               </label>\\n               <p></p>\\n               <button type = \\\"submit\\\" [disabled] = \\\"!deleteFreqForm.valid\\\">Submit</button>\\n              <p>status: deleting - {{freq_delete}}\\n            </form>\\n        </td>\\n      </tr>\\n    </table>\\n</div>\\n<br>\\n<div class = \\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-dark\\\">Likes Table Modifications</h2>\\n    <br>\\n    <table>\\n      <tr>\\n        <td>\\n          <h5>UPDATE</h5> \\n          <label>SELECT DRINKER TO UPDATE</label>\\n          <form [formGroup] = \\\"updateLikeForm\\\" (ngSubmit) =\\\"onSubmitLikeUpdate()\\\">\\n              <label>\\n                <h6>Drinker Name:</h6>\\n                <select id = \\\"likeUpdateName\\\" formControlName = \\\"likeDrinker\\\">\\n                  <option *ngFor= \\\"let drinkers of drinkerLikes_list\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                </select>\\n              </label> \\n              <br>\\n              <label>Update the Beer Liked </label>\\n              <br>\\n              <label>\\n                <h6>Old Value: </h6>\\n                <input type = \\\"text\\\" formControlName = \\\"likeOldVal\\\">\\n            </label>\\n            <br>\\n            <label>\\n                <h6>New Value: </h6>\\n                <input type = \\\"text\\\" formControlName = \\\"likeNewVal\\\">\\n            </label>\\n            <br>\\n              <div>\\n                <button type = \\\"submit\\\" [disabled] =\\\"!updateLikeForm.valid\\\">Submit</button>\\n              </div>\\n              <p>status for Update: {{like_updateStatus}}</p>\\n          </form>\\n        </td>\\n        <td>\\n            <h5>INSERT</h5>\\n            <form [formGroup] = \\\"insertLikeForm\\\" (ngSubmit) = \\\"onSubmit9()\\\">\\n                <label>\\n                  SELECT LIKES INFO\\n                </label> \\n                 <br>\\n                 <label>\\n                   <h6>Drinker Name: </h6>\\n                   <select id = \\\"likesInsert\\\" formControlName =\\\"likeName\\\">\\n                     <option *ngFor= \\\"let drinkers of drinkerName_UPDATE\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                   </select>\\n                 </label>\\n                 <br>\\n                 <label>\\n                  <h6>Beer Name: </h6>\\n                  <select id =\\\"like_insert\\\" formControlName = \\\"likeBeer\\\">\\n                    <option *ngFor = \\\"let beers of beerName_UPDATE\\\" [ngValue]= \\\"beers.name\\\">{{beers.name}}</option>\\n                  </select>\\n                 </label>\\n                <br>\\n                 <p></p>\\n                 <button type = \\\"submit\\\" [disabled] = \\\"!insertLikeForm.valid\\\">Submit</button>\\n                <p>status: inserting - {{like_insert}}\\n            </form>\\n        </td>\\n        <td>\\n          <h5>DELETE</h5>\\n          <form [formGroup] = \\\"deleteLikeForm\\\" (ngSubmit) = \\\"delete_like()\\\">\\n            <label>SELECT LIKES INFO TO DELETE</label> \\n            <br>\\n             <label>\\n                <h6>Drinker: </h6>\\n                <select id = \\\"likeDeleteDrinker\\\" formControlName = \\\"D_likename\\\">\\n                  <option *ngFor= \\\"let drinkers of drinkerLikes_list\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                </select>\\n              </label> \\n              <br>\\n              <label>\\n                <h6>Beer Name: </h6>\\n                <select id =\\\"likeDeleteBeer\\\" formControlName = \\\"D_likeBeer\\\">\\n                  <option *ngFor = \\\"let beers of beerName_UPDATE\\\" [ngValue]= \\\"beers.name\\\">{{beers.name}}</option>\\n                </select> \\n               </label>\\n             <p></p>\\n             <button type = \\\"submit\\\" [disabled] = \\\"!deleteLikeForm.valid\\\">Submit</button>\\n            <p>status: deleting - {{like_delete}}\\n          </form>\\n        </td>\\n      </tr>\\n    </table>\\n</div>\\n<br>\\n<div class = \\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-dark\\\">Transactions Table Modifications</h2>\\n    <br>\\n    <table>\\n      <tr>\\n        <td>\\n          <h5>UPDATE</h5>\\n        </td>\\n        <td>\\n            <h5>INSERT</h5>\\n            <form [formGroup] =\\\"redirectBarForm\\\" (ngSubmit) = \\\"onSubmitRedirectBar()\\\">\\n            <h6>Please direct yourself to the Bar Page for the Transaction you want to add. Complete the form at the bottom.</h6>\\n            <label>\\n                <h6>Bar Name: </h6>\\n                <select id =\\\"transInsertBar\\\" formControlName = \\\"redirecttoBarPage\\\" >\\n                  <option *ngFor =\\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\" >{{bars.name}}</option>\\n                </select>\\n               </label>\\n               <br>\\n                <p></p>\\n                <button type = \\\"submit\\\" [disabled] = \\\"!redirectBarForm.valid\\\">Submit</button>\\n            </form>\\n          </td>\\n        <td>\\n          <h5>DELETE</h5>\\n          <form [formGroup] = \\\"deleteTransForm\\\" (ngSubmit) = \\\"delete_trans()\\\">\\n              <label>\\n                SELECT TRANSACTION ID TO DELETE\\n              </label> \\n              <br>\\n               <label>\\n                  <h6>Transaction ID:</h6>\\n                  <input type = \\\"number\\\" formControlName = \\\"D_transID\\\">\\n                </label>\\n               <p></p>\\n               <button type = \\\"submit\\\" [disabled] = \\\"!deleteTransForm.valid\\\">Submit</button>\\n              <p>status: deleting - {{trans_delete}}\\n\\n            </form>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n  <br>\\n  <div class = \\\"container\\\">\\n      <h2 class=\\\"text-center font-weight-dark\\\">Has Table Modifications</h2>\\n      <br>\\n      <table>\\n        <tr>\\n          <td>\\n            <h5>UPDATE</h5>\\n            <form [formGroup] = \\\"updateHasform\\\" (ngSubmit) = \\\"onSubmitHasUpdate()\\\">\\n                <label>INPUT HAS INFO</label>\\n                 <br>\\n                 <label>\\n                   <h6>Transaction ID: </h6>\\n                   <input type = \\\"number\\\" formControlName = \\\"hasTID\\\">\\n                 </label>\\n                 <br>\\n                 <label>\\n                    <h6>Current Item:</h6>\\n                    <select id = \\\"hasUpdateItem1\\\" formControlName = \\\"hasOldItem\\\">\\n                      <option *ngFor= \\\"let item of itemName_list\\\" [ngValue] = \\\"item.name\\\">{{item.name}}</option>\\n                    </select>\\n                  </label>\\n                  <label>\\n                      <h6>New Item:</h6>\\n                      <select id = \\\"hasUpdateItem2\\\" formControlName = \\\"hasNewItem\\\">\\n                        <option *ngFor= \\\"let item of itemName_list\\\" [ngValue] = \\\"item.name\\\">{{item.name}}</option>\\n                      </select>\\n                    </label>\\n                <br>\\n                 <p></p>\\n                 <button type = \\\"submit\\\" [disabled] = \\\"!updateHasform.valid\\\">Submit</button>\\n                <p>status: inserting - {{has_update}}\\n            </form>\\n          </td>\\n          <td>\\n              <h5>INSERT</h5>\\n              <form [formGroup] = \\\"insertHasform\\\" (ngSubmit) = \\\"onSubmit11()\\\">\\n                  <label>INPUT HAS INFO</label>\\n                   <br>\\n                   <label>\\n                     <h6>Transaction ID: </h6>\\n                     <input type = \\\"number\\\" formControlName = \\\"hasTID\\\">\\n                   </label>\\n                   <br>\\n                   <label>\\n                      <h6>Item Name:</h6>\\n                      <select id = \\\"hasInsertItem\\\" formControlName = \\\"hasItem\\\">\\n                        <option *ngFor= \\\"let item of itemName_list\\\" [ngValue] = \\\"item.name\\\">{{item.name}}</option>\\n                      </select>\\n                    </label>\\n                  <br>\\n                   <p></p>\\n                   <button type = \\\"submit\\\" [disabled] = \\\"!insertHasform.valid\\\">Submit</button>\\n                  <p>status: inserting - {{has_insert}}\\n                </form>\\n          </td>\\n          <td>\\n            <h5>DELETE</h5>\\n            <form [formGroup] = \\\"deleteHasForm\\\" (ngSubmit) = \\\"delete_has()\\\">\\n              <label>SELECT TRANSACTION ID-ITEM TO DELETE FROM HAS </label> \\n              <br>\\n               <label>\\n                  <h6>Transaction ID: </h6>\\n                  <input type = \\\"number\\\" formControlName = \\\"D_hasTid\\\">\\n                </label>\\n               <br>\\n               <label>\\n                <h6>Item Name:</h6>\\n                <select id = \\\"hasDeleteItem\\\" formControlName = \\\"D_hasItem\\\">\\n                  <option *ngFor= \\\"let item of itemName_list\\\" [ngValue] = \\\"item.name\\\">{{item.name}}</option>\\n                </select>\\n              </label>\\n               <p></p>\\n               <button type = \\\"submit\\\" [disabled] = \\\"!deleteHasForm.valid\\\">Submit</button>\\n              <p>status: deleting - {{has_delete}} \\n            </form>\\n          </td>\\n        </tr>\\n      </table>\\n  </div>\\n <br>\\n<div class = \\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-dark\\\">Occurs Table Modifications</h2>\\n    <br>\\n    <table>\\n      <tr>\\n        <td>\\n          <h5>UPDATE</h5>\\n\\n        </td>\\n        <td>\\n            <h5>INSERT</h5>\\n            <form [formGroup] = \\\"insertOccurForm\\\" (ngSubmit) = \\\"onSubmit8()\\\">\\n                <label>\\n                  SELECT OCCURS INFO\\n                </label> \\n                 <br>\\n                 <label>\\n                   <h6>Transaction ID: </h6>\\n                   <input type = \\\"text\\\" formControlName = \\\"occurTid\\\">\\n                 </label>\\n                 <br>\\n                 <label>\\n                  <h6>Bar Name: </h6>\\n                  <select id =\\\"occursInsertBar\\\" formControlName = \\\"occurBar\\\">\\n                    <option *ngFor =\\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>}\\n                  </select>\\n                 </label>\\n                <br>\\n                 <p></p>\\n                 <button type = \\\"submit\\\" [disabled] = \\\"!insertOccurForm.valid\\\">Submit</button>\\n                <p>status: inserting - {{occur_insert}}\\n              </form>\\n        </td>\\n        <td>\\n          <h5>DELETE</h5>\\n          <form [formGroup] = \\\"deleteOccurForm\\\" (ngSubmit) = \\\"delete_occur()\\\">\\n            <label>SELECT OCCURS-INFO to DELETE</label> \\n            <br>\\n             <label>\\n                <H6>Transaction ID: </H6>\\n                <input type = \\\"number\\\" formControlName = \\\"D_occurTID\\\">\\n              </label>\\n              <br>\\n              <label>\\n                <h6>Bar: </h6>\\n                <select id = \\\"occursDeleteBar\\\" formControlName = \\\"D_occurBar\\\">\\n                  <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n                </select>\\n                </label>\\n             <p></p>\\n             <button type = \\\"submit\\\" [disabled] = \\\"!deleteOccurForm.valid\\\">Submit</button>\\n            <p>status: deleting - {{occur_delete}}\\n          </form>\\n        </td>\\n      </tr>\\n    </table>\\n</div>\\n<br>\\n<div class = \\\"container\\\">\\n  <h2 class=\\\"text-center font-weight-dark\\\">Days Table Modifications</h2>\\n  <br>\\n  <table>\\n    <tr>\\n      <td>\\n        <h5>UPDATE</h5>\\n        <label>SELECT BAR TO UPDATE THE OPERATION DAYS INFO</label>\\n          <form [formGroup] = \\\"updateDaysForm\\\" (ngSubmit) =\\\"onSubmitDaysUpdate()\\\">\\n            <label>\\n              <h6>Bar:</h6>\\n              <select id = \\\"daysUpdate\\\" formControlName = \\\"daysBarName\\\">\\n                  <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n              </select>\\n            </label>\\n            <label>\\n                <h6>Day of Week: </h6>\\n                <input type = \\\"radio\\\" formControlName = \\\"daysDay\\\" value = \\\"mon\\\">Monday \\n                <input type = \\\"radio\\\" formControlName = \\\"daysDay\\\" value = \\\"tue\\\">Tuesday \\n                <input type = \\\"radio\\\" formControlName = \\\"daysDay\\\" value = \\\"wed\\\">Wednesday \\n                <input type = \\\"radio\\\" formControlName = \\\"daysDay\\\" value = \\\"thur\\\">Thursday \\n                <br>\\n                <input type = \\\"radio\\\" formControlName = \\\"daysDay\\\" value = \\\"fri\\\">Friday \\n                <input type = \\\"radio\\\" formControlName = \\\"daysDay\\\" value = \\\"sat\\\">Saturday \\n                <input type = \\\"radio\\\" formControlName = \\\"daysDay\\\" value = \\\"sun\\\">Sunday \\n            </label>\\n            <br>\\n            <label>\\n                <h6>Update Attribute: </h6>\\n                  <input type = \\\"radio\\\" formControlName = \\\"daysType\\\" value = \\\"name\\\">Bar Name \\n                  <input type = \\\"radio\\\" formControlName = \\\"daysType\\\" value = \\\"day\\\">Day \\n                  <input type = \\\"radio\\\" formControlName = \\\"daysType\\\" value = \\\"open\\\">Open Time \\n                  <input type = \\\"radio\\\" formControlName = \\\"daysType\\\" value = \\\"close\\\">Close Time \\n            </label> \\n            <br>\\n            <label>\\n              <h6>New Value:</h6>\\n              <input type = \\\"text\\\" formControlName = \\\"daysNewValue\\\">\\n            </label>\\n            <br>\\n              <div>\\n                <button type = \\\"submit\\\" [disabled] =\\\"!updateDaysForm.valid\\\">Submit</button>\\n              </div>\\n              <p>status for Update: {{day_update}}</p>\\n            </form>\\n      </td>\\n      <td>\\n          <h5>INSERT</h5>\\n          <form [formGroup] = \\\"insertDaysForm\\\" (ngSubmit) = \\\"onSubmitInsertDays()\\\">\\n              <label>\\n                Generate Days Data\\n              </label> \\n               <br>\\n               <label>\\n                 <h6>Bar Name: </h6>\\n                 <select id = \\\"daysInsertDay\\\" formControlName = \\\"daysName\\\">\\n                    <option *ngFor= \\\"let bars of barName_UPDATE\\\" [ngValue] = \\\"bars.name\\\">{{bars.name}}</option>\\n                  </select>\\n               </label>\\n               <br>\\n               <label>\\n                <h6>Open Time: </h6> \\n                 <input type = \\\"text\\\" formControlName = \\\"dayOpen\\\" >\\n                 <br>\\n                 (24 hr time format. format: hh:mm:ss)\\n               </label>\\n               <br>\\n               <label>\\n                 <h6>Close Time:</h6>\\n                 <input type = \\\"text\\\" formControlName = \\\"dayClose\\\" >\\n                 <br>\\n                 (24 hr time format. format: hh:mm:ss)\\n               </label>\\n               <br>\\n               <label>\\n                  <h6>Day: </h6>\\n                    <input type = \\\"radio\\\" formControlName = \\\"dayDay\\\" value = \\\"mon\\\">Monday \\n                    <input type = \\\"radio\\\" formControlName = \\\"dayDay\\\" value = \\\"tue\\\">Tuesday \\n                    <input type = \\\"radio\\\" formControlName = \\\"dayDay\\\" value = \\\"wed\\\">Wednesday \\n                    <input type = \\\"radio\\\" formControlName = \\\"dayDay\\\" value = \\\"thur\\\">Thursday \\n                    <br>\\n                    <input type = \\\"radio\\\" formControlName = \\\"dayDay\\\" value = \\\"fri\\\">Friday \\n                    <input type = \\\"radio\\\" formControlName = \\\"dayDay\\\" value = \\\"sat\\\">Saturday \\n                    <input type = \\\"radio\\\" formControlName = \\\"dayDay\\\" value = \\\"sun\\\">Sunday \\n                  </label> \\n               <br>\\n               <p></p>\\n               <button type = \\\"submit\\\" [disabled] = \\\"!insertDaysForm.valid\\\">Submit</button>\\n              <p>status: inserting - {{day_insert}}\\n          </form>\\n      </td>\\n      <td>\\n        <h5>DELETE</h5>\\n        <form [formGroup] = \\\"deleteDayForm\\\" (ngSubmit) = \\\"delete_day()\\\">\\n          <label>SELECT BAR-DAY TO DELETE</label> \\n           <br>\\n           <label>\\n             <h6>Bar Name: </h6>\\n             <input type = \\\"text\\\" formControlName = \\\"D_daybar\\\">\\n           </label>\\n           <br>\\n           <label>\\n              <b>Day: </b>\\n              <br>\\n                <input type = \\\"radio\\\" formControlName = \\\"D_dayDay\\\" value = \\\"mon\\\">Monday \\n                <input type = \\\"radio\\\" formControlName = \\\"D_dayDay\\\" value = \\\"tue\\\">Tuesday \\n                <input type = \\\"radio\\\" formControlName = \\\"D_dayDay\\\" value = \\\"wed\\\">Wednesday \\n                <input type = \\\"radio\\\" formControlName = \\\"D_dayDay\\\" value = \\\"thur\\\">Thursday \\n                <br>\\n                <input type = \\\"radio\\\" formControlName = \\\"D_dayDay\\\" value = \\\"fri\\\">Friday \\n                <input type = \\\"radio\\\" formControlName = \\\"D_dayDay\\\" value = \\\"sat\\\">Saturday \\n                <input type = \\\"radio\\\" formControlName = \\\"D_dayDay\\\" value = \\\"sun\\\">Sunday \\n            </label> \\n          <br>\\n           <p></p>\\n           <button type = \\\"submit\\\" [disabled] = \\\"!deleteDayForm.valid\\\">Submit</button>\\n          <p>status: deleting - {{day_delete}}\\n        </form>\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n<br>\\n<div class = \\\"container\\\">\\n    <h2 class=\\\"text-center font-weight-dark\\\">Pays Table Modifications</h2>\\n    <br>\\n    <table>\\n      <tr>\\n        <td>\\n          <h5>UPDATE</h5>\\n          <form [formGroup] = \\\"updatePaysForm\\\" (ngSubmit) = \\\"update_pay()\\\">\\n              <label>INPUT INFO TRANSACTION ID-PAYER to UPDATE</label>\\n              <br>\\n              <label>\\n                <h6>Transaction ID: </h6>\\n                <input type = \\\"number\\\" formControlName = \\\"payTID\\\" minlength=\\\"1\\\">\\n              </label>\\n              <br>\\n              <label>\\n                <h6>Current Payer: </h6> \\n                <select id = \\\"paysUpdatePayer1\\\" formControlName = \\\"payOldDrinker\\\">\\n                    <option *ngFor= \\\"let drinkers of drinkerName_UPDATE\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                </select>\\n              </label>\\n              <label>\\n                  <h6>New Payer: </h6>\\n                  <select id = \\\"paysUpdatePayer2\\\" formControlName = \\\"payNewDrinker\\\">\\n                      <option *ngFor= \\\"let drinkers of drinkerName_UPDATE\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                  </select>\\n                </label>\\n              <p></p>\\n             <button type = \\\"submit\\\" [disabled] = \\\"!updatePaysForm.valid\\\">Submit</button>\\n            <p>status: inserting - {{pays_updateStatus}}\\n            </form>\\n        </td>\\n        <td>\\n            <h5>INSERT</h5>\\n            <form [formGroup] = \\\"insertPayForm\\\" (ngSubmit) = \\\"insert_pay()\\\">\\n              <label>INPUT PAYS INFO</label>\\n              <br>\\n              <label>\\n                <h6>Transaction ID: </h6>\\n                <input type = \\\"number\\\" formControlName = \\\"Pay_tid\\\">\\n              </label>\\n              <br>\\n              <label>\\n                <h6>Payer: </h6>\\n                <select id = \\\"paysInsertPayer\\\" formControlName = \\\"Pay_name\\\">\\n                    <option *ngFor= \\\"let drinkers of drinkerName_UPDATE\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                </select>\\n              </label>\\n              <p></p>\\n             <button type = \\\"submit\\\" [disabled] = \\\"!insertPayForm.valid\\\">Submit</button>\\n            <p>status: inserting - {{pay_insert}}\\n            </form>\\n            \\n        </td>\\n        <td>\\n          <h5>DELETE</h5>\\n          <form [formGroup] = \\\"deletePayForm\\\" (ngSubmit) = \\\"delete_pay()\\\">\\n            <label>\\n              SELECT TRANSACTION ID-PAYER TO DELETE\\n            </label> \\n            <br>\\n             <label>\\n               <h6>TRANSACTION ID: </h6>\\n                <input type = \\\"number\\\" formControlName = \\\"D_payTID\\\">\\n              </label>\\n              <br>\\n              <label>\\n                  <h6>Payer: </h6>\\n                  <select id = \\\"paysDeletePayer\\\" formControlName = \\\"D_payPayer\\\">\\n                      <option *ngFor= \\\"let drinkers of drinkerName_UPDATE\\\" [ngValue] = \\\"drinkers.name\\\">{{drinkers.name}}</option>\\n                  </select>\\n                </label>\\n             <p></p>\\n             <button type = \\\"submit\\\" [disabled] = \\\"!deletePayForm.valid\\\">Submit</button>\\n            <p>status: deleting - {{pay_delete}}\\n          </form>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n<p></p>\"","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport { DrinkersService, Drinker } from '../drinkers.service';\nimport{BeersService} from '../beers.service';\nimport {SelectItem} from 'primeng/api'\nimport {ActivatedRoute, RouterLink, Router} from '@angular/router';\nimport {ModificationsService} from '../modifications.service';\nimport {BarsService, items} from '../bars.service';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-modifications',\n  templateUrl: './modifications.component.html',\n  styleUrls: ['./modifications.component.css']\n})\nexport class ModificationsComponent implements OnInit {\n\n  list_states: SelectItem[];\n  selectedState: string;\n  redirectBarForm = new FormGroup({\n    redirecttoBarPage: new FormControl('',Validators.required),\n  });\n\n  drinkerUpdateForm = new FormGroup({\n     drinkerName: new FormControl('',Validators.required),\n     drinkerColumn: new FormControl ('', Validators.required),\n     drinkerupdateValue: new FormControl('', Validators.required), \n  });\n  drinkerName_UPDATE;\n  drinkerLikes_list ;\n  drinkerFreqs_list;\n  drinkerUpdateStatus: boolean; \n  beerName_UPDATE;\n\n  barUpdateForm = new FormGroup({\n    barName: new FormControl('',Validators.required),\n    barColumn: new FormControl ('', Validators.required),\n    barupdateValue: new FormControl('', Validators.required), \n  });\n  barName_UPDATE;\n  barUpdateStatus: boolean; \n\n  output: any[];\n  output1: Array<string>;\n\n  insertFreqForm = new FormGroup({\n    freqName: new FormControl('',Validators.required),\n    freqBar: new FormControl('',Validators.required)\n  });\n  freq_insert: boolean;\n  pattern2_bool: boolean;\n  updateFreqsForm = new FormGroup({\n    freqDrinker: new FormControl('',Validators.required),\n    freqOldBar: new FormControl ('', Validators.required),\n    freqNewBar: new FormControl('', Validators.required), \n });\n\nfreqs_updateStatus: boolean;\n\n  insertLikeForm = new FormGroup({\n    likeName: new FormControl('',Validators.required),\n    likeBeer: new FormControl('',Validators.required)\n  });\n  like_insert: boolean;\n\n  insertOccurForm = new FormGroup({\n    occurTid: new FormControl('',Validators.required),\n    occurBar: new FormControl('',Validators.required)\n  });\n  occur_insert: boolean;\n\n  anyqueryFrom = new FormGroup(\n    {\n      anyquery: new FormControl('',Validators.required)\n    }\n  );\n  \n  insertDrinkerForm = new FormGroup({\n    drinkerName: new FormControl('',Validators.required),\n    drinkerAddress: new FormControl('',Validators.required),\n    drinkerState: new FormControl('',Validators.required),\n    drinkerPhone: new FormControl('',Validators.required),\n  });\n  drinker_insert: boolean;\n  \n  insertBarForm = new FormGroup({\n    barName: new FormControl('',Validators.required),\n    barLicense: new FormControl('',Validators.required),\n    barState: new FormControl('',Validators.required),\n    barPhone: new FormControl('',Validators.required),\n    barAddress: new FormControl('',Validators.required),\n  });\n  bar_insert: boolean;\n\n  updateItemForm = new FormGroup({\n    itemName: new FormControl('', Validators.required),\n    itemColumn: new FormControl('', Validators.required),\n    itemUpdateValue: new FormControl('', Validators.required),\n  });\n  item_updateStatus: boolean;\n  itemName_list;\n \n  updateLikeForm = new FormGroup({\n    likeDrinker : new FormControl('', Validators.required),\n    likeOldVal: new FormControl('', Validators.required ),\n    likeNewVal: new FormControl('', Validators.required),\n  });\n  like_updateStatus: boolean;\n\n  insertItemStatus: boolean;\n\n  insertItemForm = new FormGroup({\n    itemName: new FormControl('',Validators.required),\n    itemManf: new FormControl('',Validators.required),\n    itemType: new FormControl('',Validators.required),\n  });\n\n  deleteDrinkerForm = new FormGroup({\n    D_drinkerName: new FormControl('',Validators.required),\n  });\n  drinker_delete: boolean;\n\n  deleteBarForm = new FormGroup({\n    deleteBar: new FormControl('',Validators.required),\n  });\n  bar_delete: boolean;\n\n  deleteFreqForm=new FormGroup({\n    D_freqBar: new FormControl('',Validators.required),\n    D_freqName: new FormControl('',Validators.required),\n  });\n  freq_delete: boolean;\n\n  insertSellsform = new FormGroup({\n    sellBar: new FormControl('',Validators.required),\n    sellItem: new FormControl('',Validators.required),\n    sellPrice: new FormControl('',Validators.required)\n  });\n  sell_insert: boolean;\n  pattern3_q1rownum: number;\n  pattern3_q2rownum: number;\n  pattern3_bool :boolean;\n  pattern3_is_beer: boolean;\n  \n  insertHasform = new FormGroup({\n    hasTID: new FormControl('',Validators.required),\n    hasItem: new FormControl('',Validators.required),\n  });\n  has_insert: boolean;\n\n  updateHasform = new FormGroup({\n    hasTID: new FormControl('',Validators.required),\n    hasOldItem: new FormControl('',Validators.required),\n    hasNewItem: new FormControl('',Validators.required),\n  });\n\n  has_update: boolean;\n  \n  deleteItemForm=new FormGroup({\n    D_itemname: new FormControl('',Validators.required),\n  });\n  item_delete: boolean;\n\n  deleteSellForm=new FormGroup({\n    D_sellBar: new FormControl('',Validators.required),\n    D_sellItem: new FormControl('',Validators.required),\n  });\n  sell_delete: boolean;\n\n  deleteLikeForm=new FormGroup({\n    D_likename: new FormControl('',Validators.required),\n    D_likeBeer: new FormControl('',Validators.required),\n  });\n  like_delete: boolean;\n\n  deleteOccurForm=new FormGroup({\n    D_occurTID: new FormControl('',Validators.required),\n    D_occurBar: new FormControl('',Validators.required),\n  });\n  occur_delete: boolean;\n\n  deleteHasForm=new FormGroup({\n    D_hasTid: new FormControl('',Validators.required),\n    D_hasItem: new FormControl('',Validators.required),\n  });\n  has_delete: boolean;\n\n  deleteDayForm = new FormGroup({\n    D_daybar: new FormControl('',Validators.required),\n    D_dayDay: new FormControl('',Validators.required),\n  });\n  day_delete: boolean;\n\n  deletePayForm=new FormGroup({\n    D_payTID: new FormControl('',Validators.required),\n    D_payPayer: new FormControl('',Validators.required),\n  });\n  pay_delete: boolean;\n\n  insertPayForm = new FormGroup({\n    Pay_tid: new FormControl('',Validators.required),\n    Pay_name: new FormControl('',Validators.required),\n  });\n  pay_insert: boolean; \n\n  insertDaysForm = new FormGroup({\n    daysName: new FormControl('',Validators.required),\n    dayOpen: new FormControl('',Validators.required),\n    dayClose: new FormControl('',Validators.required),\n    dayDay: new FormControl('',Validators.required),\n  });\n  day_insert: boolean;\n\n  updateDaysForm = new FormGroup({\n    daysBarName: new FormControl('',Validators.required),\n    daysDay: new FormControl('', Validators.required),\n    daysType: new FormControl('',Validators.required),\n    daysNewValue: new FormControl('',Validators.required),\n  });\n  day_update: boolean;\n\n\n\n  deleteTransForm=new FormGroup({\n    D_transID: new FormControl('',Validators.required),\n  });\n  trans_delete: boolean;\n  tid: any;\n  item :string='';  \n  result: items[];\n  t_insert: boolean;\n  t_vaild: boolean = false;\n\n\n  updateOccursForm = new FormGroup({\n    occurTID: new FormControl('',Validators.required),\n    occurOldBar: new FormControl ('', Validators.required),\n    occurNewBar: new FormControl('', Validators.required), \n });\n\n  occurs_updateStatus: boolean;\n\n  updatePaysForm = new FormGroup({\n    payTID: new FormControl('',Validators.required),\n    payOldDrinker: new FormControl ('', Validators.required),\n    payNewDrinker: new FormControl('', Validators.required), \n });\n\n  pays_updateStatus: boolean;\n\n\n  constructor(\n    private drinkerService: DrinkersService,\n    private barService: BarsService,\n    private modificationService: ModificationsService,\n    private router: Router,\n    private beerService: BeersService,\n  ) {\n    this.list_states = [\n      {label: 'Select a State', value: null},\n      {label: 'Alabama', value: 'AL'},\n      {label: 'Alaska', value: 'AK'},\n      {label: 'Arizona', value: 'AZ'},\n      {label: 'Arkansas', value: 'AR'},\n      {label: 'California', value: 'CA'},\n      {label: 'Colorado', value: 'CO'},\n      {label: 'Connecticut', value: 'CT'},\n      {label: 'Delaware', value: 'DE'},\n      {label: 'Florida', value: 'FL'},\n      {label: 'Georgia', value: 'GA'},\n      {label: 'Hawaii', value: 'HI'},\n      {label: 'Idaho', value: 'ID'},\n      {label: 'Illinois', value: 'IL'},\n      {label: 'Indiana', value: 'IN'},\n      {label: 'Iowa', value: 'IA'},\n      {label: 'Kansas', value: 'KS'},\n      {label: 'Kentucky', value: 'KY'},\n      {label: 'Louisiana', value: 'LA' },\n      {label: 'Maine', value: 'ME' },\n      {label: 'Maryland', value: 'MD' },\n      {label: 'Massachusetts', value: 'MA' },\n      {label: 'Michigan', value: 'MI' },\n      {label: 'Minnesota', value: 'MN' },\n      {label: 'Mississippi', value: 'MS' },\n      {label: 'Missouri', value: 'MO' },\n      {label: 'Montana', value: 'MT' },\n      {label: 'Nebraska', value: 'NE' },\n      {label: 'Nevada', value: 'NV' },\n      {label: 'New Hampshire', value: 'NH' },\n      {label: 'New Jersey', value: 'NJ' },\n      {label: 'New Mexico', value: 'NM'},\n      {label: 'New York', value: 'NY'},\n      {label: 'North Carolina', value: 'NC'},\n      {label: 'North Dakota', value: 'ND'},\n      {label: 'Ohio', value: 'OH'},\n      {label: 'Oklahoma', value: 'OK'},\n      {label: 'Oregon', value: 'OR'},\n      {label: 'Pennsylvania', value: 'PA'},\n      {label: 'Rhode Island', value: 'RI'},\n      {label: 'South Carolina', value: 'SC'},\n      {label: 'South Dakota', value: 'SD'},\n      {label: 'Tennessee', value: 'TN'},\n      {label: 'Texas', value: 'TX'},\n      {label: 'Utah', value: 'UT'},\n      {label: 'Vermont', value: 'VT'},\n      {label: 'Virginia', value: 'VA'},\n      {label: 'Washington', value: 'WA'},\n      {label: 'West Virginia', value: 'WV'},\n      {label: 'Wisconsin', value: 'WI'},\n      {label: 'Wyoming', value: 'WY'},\n    ];\n  }\n\n  ngOnInit() {\n    this.getDrinkers();\n    this.getBars();\n    this.getBeers();\n    this.getItems();\n    this.getDrinkers_Likes();\n    this.getDrinkers_Freqs();\n  }\n  getDrinkers(){\n    this.drinkerService.getDrinkers().subscribe(\n      data => {\n        this.drinkerName_UPDATE = data;\n      },\n      error =>{\n        alert('Could not get list of drinkers');\n      }\n    )\n  }\n  getDrinkers_Likes(){\n    this.drinkerService.getDrinkersFromLikes().subscribe(\n      data =>{\n        this.drinkerLikes_list = data;\n      },\n      error =>{\n        alert('Could not get list of drinkers from likes table');\n      }\n    )\n  }\n  getDrinkers_Freqs(){\n    this.drinkerService.getDrinkersFromFreqs().subscribe(\n      data =>{\n        this.drinkerFreqs_list = data;\n      },\n      error =>{\n        alert('Could not load distinct drinkers from frequents table');\n      }\n    )\n  }\n  getBeers(){\n    this.beerService.getBeers().subscribe(\n      data => {\n        this.beerName_UPDATE = data;\n      },\n      error =>{\n        alert('Could not get list of beers');\n      }\n    )\n  }\n  getBars(){\n    this.barService.getBars().subscribe(\n      data => {\n        this.barName_UPDATE = data;\n      },\n      error=>{\n        alert('Could not get list of bars');\n      }\n    )\n  }\n  getItems(){\n    this.modificationService.getItems().subscribe(\n      data =>{\n        this.itemName_list = data;\n      },\n      error =>{\n        alert('Could not get list of items');\n      }\n    )\n  }\n\n  onSubmitDrinkerUpdate(){\n    console.log(this.drinkerUpdateForm.value);\n    this.modificationService.updateDrinker(this.drinkerUpdateForm.value.drinkerName, this.drinkerUpdateForm.value.drinkerColumn, this.drinkerUpdateForm.value.drinkerupdateValue).subscribe(\n      data => {\n        console.log(data)\n        this.getDrinkers();\n        this.getDrinkers_Freqs();\n        this.getDrinkers_Likes();\n        this.drinkerUpdateForm.reset()\n        this.drinkerUpdateStatus = true;\n\n      },\n      error=>{\n        alert(error.error.text)\n        this.drinkerUpdateForm.reset();\n        this.drinkerUpdateStatus = false;\n      }\n    )\n    this.drinkerUpdateForm.reset();\n  }\n  onSubmitBarUpdate(){\n    console.log(this.barUpdateForm.value);\n    this.modificationService.updateBar(this.barUpdateForm.value.barName, this.barUpdateForm.value.barColumn, this.barUpdateForm.value.barupdateValue).subscribe(\n      data => {\n        console.log(data)\n        this.getBars();\n        this.barUpdateForm.reset();\n        this.barUpdateStatus = true;\n\n      },\n      error=>{\n        alert(error.error.text)\n        this.barUpdateForm.reset();\n        this.barUpdateStatus = false;\n\n      }\n    )\n    this.barUpdateForm.reset();\n  }\n\n\n  onSubmit4(){\n    console.log(this.insertDrinkerForm.value);\n      this.modificationService.insertDrinker(this.insertDrinkerForm.value.drinkerName,this.insertDrinkerForm.value.drinkerAddress,this.insertDrinkerForm.value.drinkerState,this.insertDrinkerForm.value.drinkerPhone).subscribe(\n        data=>{\n          this.getDrinkers();\n          this.getDrinkers_Freqs();\n          this.getDrinkers_Likes();\n          this.insertDrinkerForm.reset()\n          this.drinker_insert = true;\n\n        },\n        error=>{\n          alert(error.error.text)\n          this.insertDrinkerForm.reset()\n          this.drinker_insert = false;\n\n        }\n      )\n      this.insertDrinkerForm.reset()\n      this.drinker_insert = false;\n\n  }\n  onSubmit5(){\n    console.log(this.insertBarForm.value);\n    \n      this.modificationService.insertBar(this.insertBarForm.value.barName,this.insertBarForm.value.barLicense,this.insertBarForm.value.barState,this.insertBarForm.value.barPhone,this.insertBarForm.value.barAddress,).subscribe(\n        data=>{\n          this.getBars();\n          this.insertBarForm.reset()\n          this.bar_insert = true;\n\n        },\n        error =>{\n          alert(\"Duplicate Bar name! Bar already exists\")\n          this.insertBarForm.reset()\n          this.bar_insert = false;\n\n        }\n      )\n      this.insertBarForm.reset()\n  }\n\n  onSubmit7(){\n    console.log(this.insertFreqForm.value);\n    \n      this.modificationService.insertFrequent(this.insertFreqForm.value.freqName, this.insertFreqForm.value.freqBar).subscribe(\n        data=>{\n          this.getDrinkers_Freqs();\n          this.insertFreqForm.reset()\n          this.freq_insert = true;\n          this.pattern2_bool = true;\n        },\n        error=>{\n          alert(error.error.text)\n          if(error.error.text===\"Unsatisfy pattern2! Invalid frequent state.\"){\n            this.insertFreqForm.reset()\n            this.pattern2_bool = false;\n            this.freq_insert = false;\n          }else{\n            this.insertFreqForm.reset()\n            this.pattern2_bool = null;\n            this.freq_insert = false;\n\n          }\n          \n        }\n      )\n      this.insertFreqForm.reset()\n  }\n  onSubmit8(){\n    console.log(this.insertOccurForm.value);\n    \n      this.modificationService.insertOccurs(this.insertOccurForm.value.occurTid, this.insertOccurForm.value.occurBar).subscribe(\n        data=>{\n          this.insertOccurForm.reset()\n          this.occur_insert = true;\n\n        }, \n        error => {\n          alert(error.error.text)\n          this.insertOccurForm.reset()\n\t        this.occur_insert = false;\t\n        }\n      )\n      this.insertOccurForm.reset()\n  }\n\n\n  onSubmit9(){\n    console.log(this.insertLikeForm.value);\n    \n      this.modificationService.insertLikes(this.insertLikeForm.value.likeName, this.insertLikeForm.value.likeBeer).subscribe(\n        data=>{\n          this.getDrinkers_Likes()\n          this.insertLikeForm.reset()\n          this.like_insert = true;\n\n        },\n        error=>{\n          alert(error.error.text)\n          this.insertLikeForm.reset();\n          this.like_insert = false;\n\n        }\n      )\n      this.insertLikeForm.reset()\n  }\n  onSubmitItemUpdate(){\n    console.log(this.updateItemForm.value);\n    this.modificationService.updateItem(this.updateItemForm.value.itemName, this.updateItemForm.value.itemColumn, this.updateItemForm.value.itemUpdateValue).subscribe(\n      data =>{\n        console.log(data)\n        this.getItems();\n        this.updateItemForm.reset();\n        this.item_updateStatus = true;\n      },\n      error =>{\n        alert(error.error.text)\n        this.updateItemForm.reset();\n        this.item_updateStatus = false;\n\n      }\n    )\n    this.updateItemForm.reset();\n    this.item_updateStatus = false;\n\n  }\n  onSubmitLikeUpdate(){\n    console.log(this.updateLikeForm.value);\n    this.modificationService.updateLike(this.updateLikeForm.value.likeDrinker, this.updateLikeForm.value.likeOldVal, this.updateLikeForm.value.likeNewVal).subscribe(\n      data =>{\n        console.log(data)\n        this.updateLikeForm.reset();\n        this.like_updateStatus = true;\n      },\n      error =>{\n        console.log(error)\n        alert(error.error.text)\n        this.updateLikeForm.reset();\n        this.like_updateStatus = false;\n      }\n    )\n    this.updateLikeForm.reset();\n    this.like_updateStatus = false;\n\n  }\n  onSubmitItemInsert(){\n    console.log(this.insertItemForm.value);\n      this.modificationService.insertItem(this.insertItemForm.value.itemName, this.insertItemForm.value.itemManf, this.insertItemForm.value.itemType).subscribe(\n        data=>{\n          this.getItems()\n          this.insertItemForm.reset()\n          this.insertItemStatus = true;\n\n        },\n        error =>{\n          alert(\"Duplicate item! Item is already exists.\")\n          this.insertItemForm.reset()\n          this.insertItemStatus = false;\n\n        }\n      )\n      this.insertItemForm.reset()\n  }\n  delete_drinker(){\n    console.log(this.deleteDrinkerForm.value);\n      this.modificationService.deleteDrinker(this.deleteDrinkerForm.value.D_drinkerName).subscribe(\n        data=>{\n          this.getDrinkers();\n          this.getDrinkers_Freqs();\n          this.getDrinkers_Likes();\n          this.deleteDrinkerForm.reset()\n          this.drinker_delete = true;\n\n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteDrinkerForm.reset()\n          this.drinker_delete = false;\n\n        }\n      )\n  }\n  delete_Bar(){\n    console.log(this.deleteBarForm.value);\n      this.modificationService.deleteBar(this.deleteBarForm.value.deleteBar).subscribe(\n        data=>{\n          this.getBars();\n          this.deleteBarForm.reset()\n          this.bar_delete = true;\n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteBarForm.reset()\n          this.bar_delete = false;\n        }\n      )\n  }\n  delete_freq(){\n    console.log(this.deleteFreqForm.value);\n      this.modificationService.deleteFrequent(this.deleteFreqForm.value.D_freqBar, this.deleteFreqForm.value.D_freqName).subscribe(\n        data=>{\n          this.deleteFreqForm.reset()\n          this.freq_delete = true;\n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteFreqForm.reset()\n          this.freq_delete = false;\n        }\n      )\n  }\n  onSubmit10(){\n    console.log(this.insertSellsform.value);\n\n      this.modificationService.verifyPattern3_0(this.insertSellsform.value.sellItem).subscribe(\n        data=>{\n          console.log(data)\n          if(data == null){\n            this.modificationService.insertSells(this.insertSellsform.value.sellBar, this.insertSellsform.value.sellItem,this.insertSellsform.value.sellPrice).subscribe(\n              data=>{\n                this.insertSellsform.reset()\n                this.sell_insert = true;\n              },\n              error=>{\n                alert(error.error.text)\n              }\n            )\n            this.insertSellsform.reset()\n            this.sell_insert=false;\n          } else{\n            this.modificationService.verifyPattern3_1(this.insertSellsform.value.sellBar, this.insertSellsform.value.sellItem).subscribe(\n              data=>{\n                console.log(data)\n                this.pattern3_q1rownum= data.length;\n                this.modificationService.verifyPattern3_2(this.insertSellsform.value.sellBar, this.insertSellsform.value.sellItem,this.insertSellsform.value.sellPrice).subscribe(\n                  data=>{\n                    this.pattern3_q2rownum = data.length;\n      \n                    console.log(this.pattern3_q1rownum)\n                    console.log(this.pattern3_q2rownum)\n      \n                    if(this.pattern3_q1rownum == this.pattern3_q2rownum){\n                      this.modificationService.insertSells(this.insertSellsform.value.sellBar, this.insertSellsform.value.sellItem,this.insertSellsform.value.sellPrice).subscribe(\n                        data=>{\n                          this.insertSellsform.reset()\n                          this.sell_insert = true;\n                        },\n                        error=>{\n                          alert(error.error.text)\n                        }\n                      )\n                      this.insertSellsform.reset()\n                      this.sell_insert = false;\n                    } else{\n                      alert(\"Unsatisfy pattern 3! Invalid price.\")\n                      this.insertSellsform.reset()\n                      this.sell_insert = false;\n                    }\n                  }\n                )\n              }\n            )\n          }\n        }\n      )\n      \n  }\n  onSubmit11(){\n    console.log(this.insertHasform.value);\n    \n      this.modificationService.insertHas(this.insertHasform.value.hasTID, this.insertHasform.value.hasItem).subscribe(\n        data=>{\n          this.insertHasform.reset()\n          this.has_insert = true;\n        },\n        error=>{\n          alert(error.error.text)\n          this.insertHasform.reset()\n          this.has_insert = false;\n        }\n      )\n  }\n  delete_item(){\n    console.log(this.deleteItemForm.value);\n      this.modificationService.deleteItem(this.deleteItemForm.value.D_itemname).subscribe(\n        data=>{\n          this.getItems();\n          this.deleteItemForm.reset()\n          this.item_delete = true;\n\n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteItemForm.reset()\n          this.item_delete = false;\n\n        }\n      )\n  }\n\n  delete_sell(){\n    console.log(this.deleteSellForm.value);\n      this.modificationService.deleteSell(this.deleteSellForm.value.D_sellBar,this.deleteSellForm.value.D_sellItem).subscribe(\n        data=>{\n          this.deleteSellForm.reset()\n          this.sell_delete = true;\n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteSellForm.reset()\n          this.sell_delete = false;\n        }\n      )\n  }\n  delete_like(){\n    console.log(this.deleteLikeForm.value);\n      this.modificationService.deleteLike(this.deleteLikeForm.value.D_likename,this.deleteLikeForm.value.D_likeBeer).subscribe(\n        data=>{\n          this.deleteLikeForm.reset()\n          this.like_delete = true;\n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteLikeForm.reset()\n          this.like_delete = false;\n        }\n      )\n  }\n  delete_occur(){\n    console.log(this.deleteOccurForm.value);\n      this.modificationService.deleteOccur(this.deleteOccurForm.value.D_occurTID,this.deleteOccurForm.value.D_occurBar).subscribe(\n        data=>{\n          this.deleteOccurForm.reset()\n          this.occur_delete = true;\n         \n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteOccurForm.reset()\n          this.occur_delete = false;\n          \n        }\n      )\n  }\n  delete_has(){\n    console.log(this.deleteHasForm.value);\n      this.modificationService.deleteHas_valid(this.deleteHasForm.value.D_hasTid, this.deleteHasForm.value.D_hasItem).subscribe(\n        data=>{\n          this.modificationService.deleteHas_lastItem(this.deleteHasForm.value.D_hasTid).subscribe(\n            data=>{\n\n              if(data.length == 1){\n                alert(\"Not allowed to remove last item in Has table with given Transaction id.\")\n                this.deleteHasForm.reset()\n                this.has_delete = false;\n                \n                return;\n              }else{\n                this.modificationService.deleteHas(this.deleteHasForm.value.D_hasTid, this.deleteHasForm.value.D_hasItem).subscribe(\n                  data=>{\n                    this.deleteHasForm.reset()\n                    this.has_delete = true;\n                    \n                    return;\n                  }\n                )\n                this.deleteHasForm.reset()\n                this.has_delete = false;\n                \n              }\n            }\n          )\n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteHasForm.reset()\n          this.has_delete = false;\n        }\n      )\n  }\n  delete_day(){\n    console.log(this.deleteDayForm.value);\n      this.modificationService.deleteDay(this.deleteDayForm.value.D_daybar, this.deleteDayForm.value.D_dayDay ).subscribe(\n        data=>{\n          this.deleteDayForm.reset()\n          this.day_delete = true;\n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteDayForm.reset()\n          this.day_delete = false;\n          \n        }\n      )\n  }\n  \n  delete_pay(){\n    console.log(this.deletePayForm.value);\n      this.modificationService.deletePay(this.deletePayForm.value.D_payTID,this.deletePayForm.value.D_payPayer).subscribe(\n        data=>{\n          this.deletePayForm.reset()\n          this.pay_delete = true;\n        },\n        error =>{\n          alert(error.error.text)\n          this.deletePayForm.reset()\n          this.pay_delete = false;\n        }\n      )\n  }\n  insert_pay(){\n    console.log(this.insertPayForm.value);\n    \n      this.modificationService.insertPay(this.insertPayForm.value.Pay_tid, this.insertPayForm.value.Pay_name).subscribe(\n        data=>{\n          this.insertPayForm.reset()\n          this.pay_insert = true;\n        }, \n        error =>{\n          alert(error.error.text)\n          this.insertPayForm.reset()\n          this.pay_insert = false;\n        }\n      )\n  }\n  onSubmitInsertDays(){\n    console.log(this.insertDaysForm.value);\n\n    if(this.insertDaysForm.value.dayOpen<this.insertDaysForm.value.dayClose){\n      this.modificationService.insertDays(this.insertDaysForm.value.daysName,this.insertDaysForm.value.dayOpen,this.insertDaysForm.value.dayClose,this.insertDaysForm.value.dayDay).subscribe(\n        data=>{\n          this.day_insert = true;\n          this.insertDaysForm.reset()\n        },\n        error=>{\n          alert(error.error.text)\n          this.day_insert = false;\n          this.insertDaysForm.reset()\n        }\n      )\n      this.day_insert = false;\n      this.insertDaysForm.reset()\n    }\n      this.day_insert=false;\n      this.insertDaysForm.reset()\n  }\n  delete_trans(){\n    console.log(this.deleteTransForm.value);\n      this.modificationService.deleteTrans(this.deleteTransForm.value.D_transID).subscribe(\n        data=>{\n          this.deleteTransForm.reset()\n          this.trans_delete = true;\n        },\n        error =>{\n          alert(error.error.text)\n          this.deleteTransForm.reset()\n          this.trans_delete = false;\n\n        }\n      )\n  }\n  onSubmitRedirectBar(){\n    console.log(this.redirectBarForm.value.redirecttoBarPage);\n    this.router.navigate(['/bars/', this.redirectBarForm.value.redirecttoBarPage]);\n\n  }\n  onSubmitFreqsUpdate(){\n    console.log(this.updateFreqsForm.value);\n    \n      this.modificationService.updateFrequent(this.updateFreqsForm.value.freqDrinker, this.updateFreqsForm.value.freqOldBar, this.updateFreqsForm.value.freqNewBar).subscribe(\n        data=>{\n          this.getDrinkers_Freqs();\n          this.updateFreqsForm.reset()\n          this.freqs_updateStatus = true;\n          this.pattern2_bool = true;\n        },\n        error=>{\n          alert(error.error.text)\n          if(error.error.text===\"Unsatisfy pattern2! Invalid frequent state.\"){\n            this.updateFreqsForm.reset()\n            this.pattern2_bool = false;\n            this.freqs_updateStatus = false;\n          }else{\n            this.updateFreqsForm.reset()\n            this.pattern2_bool = null;\n            this.freqs_updateStatus = false;\n\n          }\n          \n        }\n      )\n      this.updateFreqsForm.reset()\n  }\n\n  \nupdate_pay(){\n  console.log(this.updatePaysForm.value);\n  \n    this.modificationService.updatePay(this.updatePaysForm.value.payTID, this.updatePaysForm.value.payOldDrinker, this.updatePaysForm.value.payNewDrinker).subscribe(\n      data=>{\n        this.updatePaysForm.reset()\n        this.pays_updateStatus = true;\n      }, \n      error =>{\n        alert(error.error.text)\n        this.updatePaysForm.reset()\n        this.pays_updateStatus = false;\n      }\n    )\n}\nonSubmitHasUpdate(){\n  console.log(this.updateHasform.value);\n  \n    this.modificationService.updateHas(this.updateHasform.value.hasTID, this.updateHasform.value.hasOldItem, this.updateHasform.value.hasNewItem).subscribe(\n      data=>{\n        this.updateHasform.reset()\n        this.has_update = true;\n      },\n      error=>{\n        alert(error.error.text)\n        this.updateHasform.reset()\n        this.has_update = false;\n      }\n    )\n}\nonSubmitDaysUpdate(){\n  console.log(this.updateDaysForm.value);\n  if(this.updateDaysForm.value.daysType == \"name\"){\n    this.modificationService.update_days_bar(this.updateDaysForm.value.daysBarName, this.updateDaysForm.value.daysDay, this.updateDaysForm.value.daysNewValue).subscribe(\n      data=>{\n        this.updateDaysForm.reset()\n        this.day_update = true;\n      },\n      error=>{\n        alert(error.error.text)\n        this.updateDaysForm.reset()\n        this.day_update = false;\n      }\n    )\n  }else if(this.updateDaysForm.value.daysType == \"day\"){\n    this.modificationService.update_days_daycolumn(this.updateDaysForm.value.daysBarName, this.updateDaysForm.value.daysDay, this.updateDaysForm.value.daysNewValue).subscribe(\n      data=>{\n        this.updateDaysForm.reset()\n        this.day_update = true;\n      },\n      error=>{\n        alert(error.error.text)\n        this.updateDaysForm.reset()\n        this.day_update = false;\n      }\n    )\n  }else if(this.updateDaysForm.value.daysType == \"open\"){\n    this.modificationService.update_days_pattern1validation_open(this.updateDaysForm.value.daysBarName, this.updateDaysForm.value.daysDay, this.updateDaysForm.value.daysNewValue).subscribe(\n      data=>{\n        this.updateDaysForm.reset()\n        this.day_update = true;\n      },\n      error=>{\n        alert(error.error.text)\n        this.updateDaysForm.reset()\n        this.day_update = false;\n      }\n    )\n  }\n  else if(this.updateDaysForm.value.daysType == \"close\"){\n    this.modificationService.update_days_pattern1validation_close(this.updateDaysForm.value.daysBarName, this.updateDaysForm.value.daysDay, this.updateDaysForm.value.daysNewValue).subscribe(\n      data=>{\n        this.updateDaysForm.reset()\n        this.day_update = true;\n      },\n      error=>{\n        alert(error.error.text)\n        this.updateDaysForm.reset()\n        this.day_update = false;\n      }\n    )\n  }\n\n}\n\n \n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Bars Page</h1>\\n    <p class=\\\"lead\\\"></p>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n    <p-table [value]=\\\"bars\\\">\\n      <ng-template pTemplate=\\\"header\\\">\\n        <tr>\\n          <th>Name</th>\\n          <th>Licence</th>\\n          <th>Address</th>\\n          <th>State</th>\\n          <th>Phone</th>\\n        </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\\"body\\\" let-bar>\\n        <tr>\\n          <td>\\n            <a routerLink=\\\"/bars/{{ bar.name }}\\\">\\n              {{ bar.name }}\\n            </a>\\n          </td>\\n          <td>{{ bar.license }}</td>\\n          <td>{{ bar.address }}</td>\\n          <td>{{ bar.state }}</td>\\n          <td>{{ bar.phone }}</td>\\n        </tr>\\n      </ng-template>\\n    </p-table>\\n </div>\\n\\n <br><br>\"","import { Component, OnInit } from '@angular/core';\nimport { BarsService, Bar } from '../bars.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  bars: Bar[];\n  \n  constructor(\n    public barService: BarsService\n  ) { }\n\n  ngOnInit() {\n    this.getBars();\n  }\n\n  getBars() {\n    this.barService.getBars().subscribe(\n      data => {\n         this.bars = data;\n      },\n      error => {\n        alert('Could not retrieve a list of bars');\n      }\n    );\n  }\n   \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}